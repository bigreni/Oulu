(window.webpackJsonp=window.webpackJsonp||[]).push([["map"],{"./app/component/Availability.js":function(e,t,a){"use strict";var i=a("./node_modules/prop-types/index.js"),n=a.n(i),r=a("./node_modules/react/index.js"),o=a.n(r),s=a("./node_modules/classnames/index.js"),l=a.n(s),d=a("./app/component/ComponentUsageExample.js");function c(e){var t,a=e.total,i=e.available,n=e.fewAvailableCount,r=e.text,s=i/a*100;t=0===s?"available-none":i<=n?"available-few":"available-more";var d=100===s?"available-more":"available-none",c=s>0&&s<100&&"separate";return s<5&&(s=5),s>95&&(s=95),o.a.createElement("div",{className:"availability-container"},r,o.a.createElement("div",{className:"row"},o.a.createElement("div",{className:l()("availability-column",t,c),style:{width:s+"%"}}),o.a.createElement("div",{className:l()("availability-column",d,c),style:{width:100-s+"%"}})))}c.displayName="Availability",c.description=function(){return o.a.createElement("div",null,o.a.createElement("p",null,"Renders information about availability"),o.a.createElement(d.a,{description:""},o.a.createElement(c,{available:1,total:3,fewAvailableCount:3,text:"Bikes available"})))},c.propTypes={available:n.a.number.isRequired,total:n.a.number.isRequired,fewAvailableCount:n.a.number.isRequired,text:n.a.node.isRequired},t.a=c},"./app/component/CityBikeAvailability.js":function(e,t,a){"use strict";var i=a("./node_modules/prop-types/index.js"),n=a.n(i),r=a("./node_modules/react/index.js"),o=a.n(r),s=a("./node_modules/recompose/mapProps.js"),l=a.n(s),d=a("./node_modules/react-intl/lib/index.es.js"),c=a("./app/component/Availability.js"),m=a("./app/component/ComponentUsageExample.js"),u=l()((function(e){var t=e.bikesAvailable,a=e.totalSpaces,i=e.fewAvailableCount,n=Number.isNaN(a)?0:a,r=Number.isNaN(t)?0:t;return{available:r,total:n,fewAvailableCount:i,text:o.a.createElement("p",{className:"sub-header-h4 availability-header"},o.a.createElement(d.a,{id:"bike-availability",defaultMessage:"Bikes available at the station right now"}),"Â ","(",r,"/",n,")")}}))(c.a);u.displayName="CityBikeAvailability",u.description=function(){return o.a.createElement("div",null,o.a.createElement("p",null,"Renders information about citybike availability"),o.a.createElement(m.a,{description:""},o.a.createElement(u,{bikesAvailable:1,totalSpaces:3,fewAvailableCount:3})))},u.propTypes={bikesAvailable:n.a.number.isRequired,totalSpaces:n.a.number.isRequired,fewAvailableCount:n.a.number.isRequired},t.a=u},"./app/component/CityBikeCard.js":function(e,t,a){"use strict";var i=a("./node_modules/prop-types/index.js"),n=a.n(i),r=a("./node_modules/react/index.js"),o=a.n(r),s=a("./app/component/CardHeader.js"),l=a("./app/component/ExampleData.js"),d=a("./app/component/ComponentUsageExample.js"),c=a("./app/component/Card.js"),m=function(e,t){var a=e.station,i=e.children,n=e.className,r=t.config;return!(!a||!i||0===i.length)&&o.a.createElement(c.a,{className:n},o.a.createElement(s.a,{name:a.name,description:r.cityBike.showStationId?a.stationId:"",icon:"icon-icon_citybike",unlinked:!0}),i)};m.description=function(){return o.a.createElement("div",null,o.a.createElement("p",null,"Renders a citybike card with header and child props as content"),o.a.createElement(d.a,{description:"Basic"},o.a.createElement(m,{className:"padding-small",station:l.k},"Im content of the citybike card")))},m.displayName="CityBikeCard",m.propTypes={station:n.a.object.isRequired,className:n.a.string,children:n.a.node.isRequired},m.contextTypes={config:n.a.object.isRequired},t.a=m},"./app/component/CityBikeContent.js":function(e,t,a){"use strict";var i=a("./node_modules/prop-types/index.js"),n=a.n(i),r=a("./node_modules/react/index.js"),o=a.n(r),s=a("./node_modules/react-intl/lib/index.es.js"),l=a("./app/component/CityBikeAvailability.js"),d=a("./app/component/CityBikeUse.js"),c=a("./app/component/ComponentUsageExample.js"),m=a("./app/component/ExampleData.js"),u=function(e,t){var a=e.station,i=e.lang,n=t.config;return o.a.createElement("div",{className:"city-bike-container"},"Station on"!==a.state?o.a.createElement("p",{className:"sub-header-h4 availability-header"},o.a.createElement(s.a,{id:"citybike_off",defaultMessage:"Bike station closed"})):o.a.createElement(l.a,{bikesAvailable:a.bikesAvailable,totalSpaces:a.bikesAvailable+a.spacesAvailable,fewAvailableCount:n.cityBike.fewAvailableCount}),n.cityBike.useUrl[i]&&n.transportModes.citybike.availableForSelection&&o.a.createElement(d.a,{lang:i}),!n.transportModes.citybike.availableForSelection&&o.a.createElement("div",{className:"city-bike-use-container"},o.a.createElement("p",{className:"sub-header-h4 text-center"},o.a.createElement(s.a,{id:"citybike-off-season",defaultMessage:"City bike stations will be opened again next spring"}))))};u.displayName="CityBikeContent",u.description=function(){return o.a.createElement("div",null,o.a.createElement("p",null,"Renders content of a citybike card"),o.a.createElement(c.a,{description:""},o.a.createElement(u,{station:m.k,lang:m.d})))},u.propTypes={station:n.a.object.isRequired,lang:n.a.string.isRequired},u.contextTypes={config:n.a.object.isRequired},t.a=u},"./app/component/CityBikeUse.js":function(e,t,a){"use strict";var i=a("./node_modules/prop-types/index.js"),n=a.n(i),r=a("./node_modules/react/index.js"),o=a.n(r),s=a("./node_modules/react-intl/lib/index.es.js"),l=a("./app/component/ComponentUsageExample.js"),d=a("./app/component/ExampleData.js"),c=function(e,t){var a=e.lang;return o.a.createElement("div",{className:"city-bike-use-container"},o.a.createElement("p",{className:"sub-header-h4 text-center"},o.a.createElement(s.a,{id:"citybike-register-required",defaultMessage:"To use city bikes, you need to register"})),o.a.createElement("a",{href:t.config.cityBike.useUrl[a]},o.a.createElement("button",{className:"use-bike-button cursor-pointer"},o.a.createElement(s.a,{id:"use-citybike",defaultMessage:"Start using"}))))};c.displayName="CityBikeUse",c.description=function(){return o.a.createElement("div",null,o.a.createElement("p",null,"Renders use citybike component"),o.a.createElement(l.a,{description:""},o.a.createElement(c,{lang:d.d})))},c.propTypes={lang:n.a.string.isRequired},c.contextTypes={config:n.a.object.isRequired},t.a=c},"./app/component/map/Map.js":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return Za}));var i,n,r=a("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),o=a("./node_modules/prop-types/index.js"),s=a.n(o),l=a("./node_modules/react/index.js"),d=a.n(l),c=a("./node_modules/element-resize-detector/src/element-resize-detector.js"),m=a.n(c),u=a("./node_modules/react-leaflet/es/Map.js"),p=a("./node_modules/react-leaflet/es/TileLayer.js"),f=a("./node_modules/react-leaflet/es/AttributionControl.js"),g=a("./node_modules/react-leaflet/es/ScaleControl.js"),h=a("./node_modules/react-leaflet/es/ZoomControl.js"),y=a("./node_modules/leaflet/dist/leaflet-src.js"),b=a.n(y),v=(a("./node_modules/leaflet-active-area/src/leaflet.activearea.js"),a("./node_modules/leaflet/dist/leaflet.css"),a("./node_modules/fluxible-addons-react/connectToStores.js")),E=a.n(v),S=a("./node_modules/recompose/pure.js"),k=a.n(S),N=a("./app/component/Icon.js"),R=a("./app/util/browser.js"),j=a("./app/util/shapes.js");R.c&&(i=a("./node_modules/react-leaflet/es/Marker.js").default,n=a("./node_modules/leaflet/dist/leaflet-src.js"));var w=R.c?n.divIcon({html:N.a.asString("icon-icon_current-location"),className:"current-location-marker",iconSize:[40,40]}):null;function T(e){var t=e.coordinates;return null===t?null:d.a.createElement(i,{keyboard:!1,zIndexOffset:-1,position:[t.lat,t.lon],icon:w})}T.propTypes={coordinates:j.a},T.defaultProps={coordinates:null};var C=E()(k()(T),["PositionStore"],(function(e){var t=e.getStore("PositionStore").getLocationState();return{coordinates:t.hasLocation?{lat:t.lat,lon:t.lon,address:t.address}:null}})),x=a("./node_modules/@babel/runtime/helpers/esm/extends.js"),F=a("./node_modules/react-relay/classic.js"),O=a.n(F),A=a("./node_modules/react-router/es/index.js"),M=a("./node_modules/react-intl/lib/index.es.js"),I=a("./node_modules/react-leaflet/es/GridLayer.js"),_=a("./node_modules/@mapbox/sphericalmercator/sphericalmercator.js"),L=a.n(_),P=a("./node_modules/lodash-es/filter.js"),D=a("./node_modules/lodash-es/isEmpty.js"),q=a("./node_modules/lodash-es/isEqual.js"),V=a("./node_modules/lodash-es/uniqBy.js"),z=a("./node_modules/lodash-es/get.js"),U=a("./node_modules/react-leaflet/es/context.js"),B=a("./node_modules/react-leaflet/es/Popup.js"),W=a("./app/route/StopRoute.js"),G=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);G.queries={terminal:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"terminalId"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"station",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"TerminalRoute",type:"Stop"}}},G.paramDefinitions={terminalId:{required:!0}},G.routeName="TerminalRoute";var H=a("./app/route/CityBikeRoute.js"),Q=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);Q.queries={station:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"carPark",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"ParkingStationRoute",type:"CarPark"}}},Q.paramDefinitions={id:{required:!0}},Q.routeName="ParkingStationRoute";var Z=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);Z.queries={camera:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"},{fieldName:"__typename",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"String"}],fieldName:"camera",kind:"Query",metadata:{isAbstract:!0,identifyingArgName:"id",identifyingArgType:"String!"},name:"CameraStationRoute",type:"CameraInterface"}}},Z.paramDefinitions={id:{required:!0}},Z.routeName="CameraStationRoute";var Y=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);Y.queries={roadwork:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"roadwork",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"RoadworkRoute",type:"Roadwork"}}},Y.paramDefinitions={id:{required:!0}},Y.routeName="RoadworkRoute";var K=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);K.queries={trafficDisorder:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"trafficDisorder",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"DisorderRoute",type:"TrafficDisorder"}}},K.paramDefinitions={id:{required:!0}},K.routeName="DisorderRoute";var J=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);J.queries={trafficAnnouncement:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"trafficAnnouncement",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"TrafficAnnouncementRoute",type:"TrafficAnnouncement"}}},J.paramDefinitions={id:{required:!0}},J.routeName="TrafficAnnouncementRoute";var X=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);X.queries={station:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"weatherStation",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"WeatherStationRoute",type:"WeatherStation"}}},X.paramDefinitions={id:{required:!0}},X.routeName="WeatherStationRoute";var $=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);$.queries={station:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"tmsStation",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"TmsStationRoute",type:"TmsStation"}}},$.paramDefinitions={id:{required:!0}},$.routeName="TmsStationRoute";var ee=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);ee.queries={station:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"roadCondition",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"RoadConditionRoute",type:"RoadCondition"}}},ee.paramDefinitions={id:{required:!0}},ee.routeName="RoadConditionRoute";var te=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);te.queries={maintenanceVehicleRouteEvent:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"maintenanceVehicleRouteEvent",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"MaintenanceVehicleRouteRoute",type:"MaintenanceVehicleRouteEvent"}}},te.paramDefinitions={id:{required:!0}},te.routeName="MaintenanceVehicleRouteRoute";var ae=a("./app/component/map/popups/StopMarkerPopup.js"),ie=a("./app/component/map/tile-layer/MarkerSelectPopup.js"),ne=a("./app/component/map/popups/CityBikePopup.js"),re=a("./app/component/Card.js"),oe=a("./app/component/CardHeader.js"),se=a("./node_modules/moment/moment.js"),le=a.n(se),de=a("./app/component/ComponentUsageExample.js"),ce=a("./app/component/ExampleData.js"),me=function(e){var t,a,i,n,r=e.sensors,o=e.measuredTime,s=e.lang,l=r.find((function(e){return"ILMA"===e.name})),c=r.find((function(e){return"TIE_1"===e.name})),m=r.find((function(e){return"SADE"===e.name})),u=r.find((function(e){return"KELI_1"===e.name}));return d.a.createElement("table",{className:"component-list"},d.a.createElement("tbody",null,l&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"air-temperature",defaultMessage:"Air temperature"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,l.sensorValue+"\n              "+l.sensorUnit)),c&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-temperature",defaultMessage:"Road temperature"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,c.sensorValue+"\n              "+c.sensorUnit)),m&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"rain",defaultMessage:"Rain"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,"fi"===s?null==(t=m.sensorValueDescriptionFi)?void 0:t.toLowerCase():null==(a=m.sensorValueDescriptionEn)?void 0:a.toLowerCase())),u&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"condition",defaultMessage:"Condition"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,"fi"===s?null==(i=u.sensorValueDescriptionFi)?void 0:i.toLowerCase():null==(n=u.sensorValueDescriptionEn)?void 0:n.toLowerCase())),o&&d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2,className:"last-updated"},d.a.createElement(M.a,{id:"last-updated",defaultMessage:"Last updated"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),le()(o).format("HH:mm:ss")||""))))};me.displayName="WeatherStationContent",me.description=d.a.createElement("div",null,d.a.createElement("p",null,"RendTimeers content of a roadwork popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(me,{comment:ce.d}))),me.propTypes={sensors:s.a.array.isRequired,measuredTime:s.a.string.isRequired,lang:s.a.string.isRequired};var ue=me;function pe(e,t){var a=e.station,i=e.lang,n=t.intl,r=a.names[i]||a.name;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"weather-station",defaultMessage:"Weather station"}),description:r,icon:"icon-icon_weather-station",unlinked:!0}),d.a.createElement(ue,{sensors:a.sensorValues,measuredTime:a.measuredTime,lang:i})))}pe.displayName="WeatherStationPopup",pe.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a weather station popup."),d.a.createElement(de.a,{description:""},d.a.createElement(pe,{context:"context object here"}))),pe.propTypes={lang:s.a.string.isRequired,station:s.a.object.isRequired},pe.contextTypes={intl:M.d.isRequired};var fe=O.a.createContainer(E()(pe,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{station:function(){return{children:[{fieldName:"weatherStationId",kind:"Field",metadata:{},type:"String"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"names",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedNames"},{fieldName:"state",kind:"Field",metadata:{},type:"String"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{children:[{fieldName:"roadStationId",kind:"Field",metadata:{},type:"Int"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"sensorValue",kind:"Field",metadata:{},type:"Float"},{fieldName:"sensorUnit",kind:"Field",metadata:{},type:"String"},{fieldName:"sensorValueDescriptionFi",kind:"Field",metadata:{},type:"String"},{fieldName:"sensorValueDescriptionEn",kind:"Field",metadata:{},type:"String"}],fieldName:"sensorValues",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"WeatherSensorValue"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"WeatherStationPopup_StationRelayQL",type:"WeatherStation"}}}}),ge=function(e){var t=e.sensors,a=e.measuredTime,i=e.direction1,n=e.direction2,r=t.find((function(e){return"KESKINOPEUS_5MIN_LIUKUVA_SUUNTA1"===e.name})),o=t.find((function(e){return"KESKINOPEUS_5MIN_LIUKUVA_SUUNTA2"===e.name})),s=t.find((function(e){return"OHITUKSET_5MIN_LIUKUVA_SUUNTA1"===e.name})),l=t.find((function(e){return"OHITUKSET_5MIN_LIUKUVA_SUUNTA2"===e.name}));return d.a.createElement("table",{className:"component-list"},d.a.createElement("tbody",null,d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2},d.a.createElement(M.a,{id:"average-speed",defaultMessage:"Average speed"}))),r&&d.a.createElement("tr",null,d.a.createElement("td",null,i+":"),d.a.createElement("td",null,r.sensorValue+" "+r.sensorUnit)),o&&d.a.createElement("tr",null,d.a.createElement("td",null,n+":"),d.a.createElement("td",null,o.sensorValue+" "+o.sensorUnit)),d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2},d.a.createElement(M.a,{id:"traffic-count",defaultMessage:"Traffic count"}))),s&&d.a.createElement("tr",null,d.a.createElement("td",null,i+":"),d.a.createElement("td",null,s.sensorValue+" "+s.sensorUnit)),l&&d.a.createElement("tr",null,d.a.createElement("td",null,n+":"),d.a.createElement("td",null,l.sensorValue+" "+l.sensorUnit)),a&&d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2,className:"last-updated"},d.a.createElement(M.a,{id:"last-updated",defaultMessage:"Last updated"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),le()(a).format("HH:mm:ss")||""))))};ge.displayName="TmsStationContent",ge.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders content of a tms station popup"),d.a.createElement(de.a,{description:""},d.a.createElement(ge,{direction1:"",direction2:"",comment:ce.d}))),ge.propTypes={sensors:s.a.array.isRequired,measuredTime:s.a.string.isRequired,direction1:s.a.string.isRequired,direction2:s.a.string.isRequired};var he=ge;function ye(e,t){var a=e.station,i=e.lang,n=t.intl,r=a.names[i]||a.name;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"traffic-monitoring",defaultMessage:"Traffic monitoring"}),description:r,icon:"icon-icon_tms-station",unlinked:!0}),d.a.createElement(he,{sensors:a.sensorValues,measuredTime:a.measuredTime,direction1:a.direction1Municipality,direction2:a.direction2Municipality})))}ye.displayName="TmsStationPopup",ye.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a weather station popup."),d.a.createElement(de.a,{description:""},d.a.createElement(ye,{context:"context object here"}))),ye.propTypes={lang:s.a.string.isRequired,station:s.a.object.isRequired},ye.contextTypes={intl:M.d.isRequired};var be=O.a.createContainer(E()(ye,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{station:function(){return{children:[{fieldName:"tmsStationId",kind:"Field",metadata:{},type:"String"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"names",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedNames"},{fieldName:"state",kind:"Field",metadata:{},type:"String"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"String"},{children:[{fieldName:"roadStationId",kind:"Field",metadata:{},type:"Int"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"shortName",kind:"Field",metadata:{},type:"String"},{fieldName:"sensorValue",kind:"Field",metadata:{},type:"Int"},{fieldName:"sensorUnit",kind:"Field",metadata:{},type:"String"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"String"}],fieldName:"sensorValues",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"TmsSensorValue"},{fieldName:"direction1Municipality",kind:"Field",metadata:{},type:"String"},{fieldName:"direction2Municipality",kind:"Field",metadata:{},type:"String"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"TmsStationPopup_StationRelayQL",type:"TmsStation"}}}}),ve=a("./app/component/map/MarkerPopupBottom.js"),Ee=a("./node_modules/recompose/mapProps.js"),Se=a.n(Ee),ke=a("./app/component/Availability.js"),Ne=Se()((function(e){var t=e.realtime,a=e.maxCapacity,i=e.spacesAvailable;return{available:t?i:0,total:a,fewAvailableCount:e.fewAvailableCount,text:d.a.createElement("p",{className:"sub-header-h4 availability-header"},d.a.createElement(M.a,{id:"parking-availability",defaultMessage:"Spaces available"}),"Â ","(",!t||Number.isNaN(i)?"?":i,"/",Number.isNaN(a)?0:a,")")}}))(ke.a);Ne.displayName="ParkingStationAvailability",Ne.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders information about parking station availability"),d.a.createElement(de.a,{description:"non-realtime"},d.a.createElement(Ne,{spacesAvailable:1,maxCapacity:3})),d.a.createElement(de.a,{description:"realtime"},d.a.createElement(Ne,{realtime:!0,spacesAvailable:1,maxCapacity:3}))),Ne.propTypes={realtime:s.a.bool,maxCapacity:s.a.number.isRequired,spacesAvailable:s.a.number.isRequired,fewAvailableCount:s.a.number.isRequired};var Re=Ne,je=function(e,t){var a=e.pricing,i=e.currentLanguage,n=t.config.defaultLanguage;return a&&Array.isArray(a)&&a.length?d.a.createElement("table",{className:"pricing-list"},d.a.createElement("tbody",null,a.map((function(e,t){return d.a.createElement("tr",{key:t},d.a.createElement("td",null,e.title[i]||e.title[n]),d.a.createElement("td",null,e.value[i]||e.value[n]))})))):null};je.displayName="ParkingStationPricing",je.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders pricing for a ParkingStation popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(je,{pricing:[{title:{en:"Standard fee"},value:{en:"2,50 â¬ (1st hour)"}},{title:{en:"Fee"},value:{en:"1,10 â¬ /30 min"}}]}))),je.propTypes={pricing:s.a.array,currentLanguage:s.a.string},je.defaultProps={pricing:void 0,currentLanguage:""},je.contextTypes={config:s.a.shape({defaultLanguage:s.a.string}).isRequired};var we,Te=E()(je,["PreferencesStore"],(function(e){return{currentLanguage:e.getStore("PreferencesStore").getLanguage()}})),Ce=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this.props.station,t=e.name,a=e.spacesAvailable,i=e.maxCapacity,n=e.realtime,r=e.lon,o=e.lat,s=e.pricing;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:this.context.intl.formatMessage({id:"parking",defaultMessage:"Parking"}),description:t,icon:"icon-icon_parking-station",unlinked:!0}),n&&d.a.createElement(Re,{realtime:n,maxCapacity:i,spacesAvailable:a,fewAvailableCount:i*(this.context.config.parkingStations.availabilityThreshold||.25)}),s&&d.a.createElement(Te,{pricing:s})),d.a.createElement(ve.a,{location:{address:t,lat:o,lon:r}}))},t}(d.a.Component);we=Ce,Ce.contextTypes={intl:M.d.isRequired,config:s.a.object.isRequired},Ce.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a ParkingStation popup."),d.a.createElement(de.a,{description:""},d.a.createElement(we,{context:"context object here"},"Im content of a ParkingStation card"))),Ce.propTypes={station:s.a.object.isRequired};var xe,Fe=O.a.createContainer(Ce,{fragments:{station:function(){return{children:[{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"maxCapacity",kind:"Field",metadata:{},type:"Int"},{fieldName:"realtime",kind:"Field",metadata:{},type:"Boolean"},{fieldName:"lon",kind:"Field",metadata:{},type:"Float"},{fieldName:"lat",kind:"Field",metadata:{},type:"Float"},{children:[{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"title",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"value",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"}],fieldName:"pricing",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"CarParkPriceListItem"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"ParkingStationPopup_StationRelayQL",type:"CarPark"}}}}),Oe=a("./node_modules/recompose/withProps.js"),Ae=a.n(Oe),Me=a("./node_modules/lodash-es/compact.js"),Ie=a("./node_modules/lodash-es/every.js"),_e=a("./node_modules/lodash-es/sumBy.js"),Le=a("./app/component/map/popups/ParkAndRideAvailability.js"),Pe=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:this.context.intl.formatMessage({id:"park-and-ride",defaultMessage:"Park and Ride"}),description:this.props.name,icon:"icon-icon_car",unlinked:!0}),d.a.createElement(Le.a,{realtime:this.props.realtime,maxCapacity:this.props.maxCapacity,spacesAvailable:this.props.spacesAvailable})),d.a.createElement(ve.a,{location:{address:this.props.name,lat:this.props.lat,lon:this.props.lon}}))},t}(d.a.Component);xe=Pe,Pe.contextTypes={intl:M.d.isRequired},Pe.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a citybike popup."),d.a.createElement(de.a,{description:""},d.a.createElement(xe,{context:"context object here"},"Im content of a citybike card"))),Pe.propTypes={realtime:s.a.bool.isRequired,maxCapacity:s.a.number.isRequired,spacesAvailable:s.a.number.isRequired,name:s.a.string.isRequired,lat:s.a.number.isRequired,lon:s.a.number.isRequired};var De=O.a.createContainer(Ae()((function(e){var t=e.facilities;return{realtime:Object(Ie.a)(Object(Me.a)(t),"realtime"),maxCapacity:Object(_e.a)(Object(Me.a)(t),"maxCapacity"),spacesAvailable:Object(_e.a)(Object(Me.a)(t),"spacesAvailable")}}))(Pe),{fragments:{facilities:function(){return{children:[{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"maxCapacity",kind:"Field",metadata:{},type:"Int"},{fieldName:"realtime",kind:"Field",metadata:{},type:"Boolean"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{plural:!0},name:"ParkAndRideHubPopup_FacilitiesRelayQL",type:"CarPark"}}}}),qe=O.a.createContainer(Ae()((function(e){return{realtime:e.facility.realtime,maxCapacity:e.facility.maxCapacity,spacesAvailable:e.facility.spacesAvailable}}))(Pe),{fragments:{facility:function(){return{children:[{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"maxCapacity",kind:"Field",metadata:{},type:"Int"},{fieldName:"realtime",kind:"Field",metadata:{},type:"Boolean"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"ParkAndRideFacilityPopup_FacilityRelayQL",type:"CarPark"}}}}),Ve=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);Ve.queries={facilities:function(){return{calls:[{kind:"Call",metadata:{type:"[String]"},name:"ids",value:{kind:"CallVariable",callVariableName:"stationIds"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"carParks",kind:"Query",metadata:{isPlural:!0,identifyingArgName:"ids",identifyingArgType:"[String]"},name:"ParkAndRideHubRoute",type:"CarPark"}}},Ve.paramDefinitions={stationIds:{required:!0}},Ve.routeName="ParkAndRideHubRoute";var ze=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);ze.queries={facility:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"carPark",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"ParkAndRideFacilityRoute",type:"CarPark"}}},ze.paramDefinitions={id:{required:!0}},ze.routeName="ParkAndRideFacilityRoute";var Ue=a("./app/component/map/popups/TicketSalesPopup.js"),Be=function(e){var t=e.trafficFlow,a=e.trafficDirectionName,i=e.averageSpeed,n=e.measuredTime;return d.a.createElement("table",{className:"component-list"},d.a.createElement("tbody",null,t&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"traffic-flow",defaultMessage:"Traffic flow"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,function(e){switch(e){case"TRAFFIC_FLOW_NORMAL":return d.a.createElement(M.a,{id:"traffic-flow-normal",defaultMessage:"Normal"});case"TRAFFIC_HEAVIER_THAN_NORMAL":return d.a.createElement(M.a,{id:"traffic-flow-medium",defaultMessage:"Medium"});case"TRAFFIC_MUCH_HEAVIER_THAN_NORMAL":return d.a.createElement(M.a,{id:"traffic-flow-heavy",defaultMessage:"Heavy"});default:return d.a.createElement(M.a,{id:"traffic-flow-unknown",defaultMessage:"Unknown"})}}(t))),a&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"traffic-direction",defaultMessage:"Traffic direction"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,a)),i&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"average-speed",defaultMessage:"Average speed"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,i+" km/h")),n&&d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"last-updated",defaultMessage:"Last updated"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"}))),d.a.createElement("td",null,le()(n).format("HH:mm:ss")||""))))};Be.displayName="FluencyContent",Be.description=d.a.createElement("div",null,d.a.createElement("p",null,"Content of a fluency popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(Be,{comment:ce.d}))),Be.propTypes={trafficFlow:s.a.string,trafficDirectionName:s.a.string,averageSpeed:s.a.number,measuredTime:s.a.string},Be.defaultProps={trafficFlow:null,trafficDirectionName:null,averageSpeed:null,measuredTime:null};var We=Be,Ge=a("./app/action/MapLayerActions.js"),He=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var a=t.prototype;return a.componentDidMount=function(){var e=this.props,t=e.name,a=e.trafficDirection,i=e.detName;t&&this.context.executeAction(Ge.d,a?t+"_"+a:t+"_"+i)},a.componentWillUnmount=function(){this.context.executeAction(Ge.b)},a.render=function(){var e=this.props,t=e.name,a=e.averageSpeed,i=e.trafficFlow,n=e.trafficDirectionName,r=e.measuredTime,o=this.context.intl;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:o.formatMessage({id:"fluency",defaultMessage:"Fluency"}),description:t,icon:"icon-icon_fluency",unlinked:!0}),d.a.createElement(We,{averageSpeed:a,trafficFlow:i,trafficDirectionName:n,measuredTime:r})))},t}(d.a.Component);He.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a fluency popup."),d.a.createElement(de.a,{description:""},d.a.createElement(He,{context:"context object here"}))),He.propTypes={name:s.a.string.isRequired,detName:s.a.string,trafficDirection:s.a.number,trafficDirectionName:s.a.string,trafficFlow:s.a.string,averageSpeed:s.a.number,measuredTime:s.a.string},He.defaultProps={detName:void 0,trafficDirection:void 0,trafficDirectionName:null,trafficFlow:null,averageSpeed:null,measuredTime:null},He.contextTypes={intl:M.d.isRequired,executeAction:s.a.func.isRequired};var Qe=He,Ze=function(e){function t(a,i){var n;return(n=e.call(this,a)||this).changeActive=function(e){n.setState({active:e})},n.next=function(){var e=n.props.children,a=n.state.active,i=a+1===e.length?t.FIRST:a+1;n.setState({active:i})},n.prev=function(){var e=n.props.children,a=n.state.active,i=a===t.FIRST?e.length-1:a-1;n.setState({active:i})},n.state={active:t.FIRST},n}return Object(r.a)(t,e),t.prototype.render=function(){var e=this,t=this.props.children,a=this.state.active,i=this.context.intl.formatMessage;return d.a.createElement("div",{className:"image-slider",role:"tablist",tabIndex:-1,onKeyDown:function(t){37===t.which?e.prev():39===t.which&&e.next()}},d.a.createElement("div",{className:"slides"},d.a.Children.map(t,(function(e,t){var i=((e.props.className||"")+(t===a?" active":"")).trim(),n=Object(x.a)({},e.props,{className:i});return d.a.cloneElement(e,n)}))),t.length>1&&[d.a.createElement("div",{className:"nav",key:"nav"},d.a.Children.map(t,(function(t,i){return d.a.createElement("button",{onClick:function(){return e.changeActive(i)},onKeyDown:function(t){32===t.which&&e.changeActive(i)},className:i===a?"active":"",tabIndex:i+1,"aria-label":"img "+(i+1)})}))),d.a.createElement("button",{className:"prev",onClick:this.prev,onKeyDown:function(){},tabIndex:-1,key:"prev","aria-label":i({id:"previous",defaultMessage:"Previous"})},d.a.createElement(N.a,{img:"icon-icon_arrow-collapse--left"})),d.a.createElement("button",{className:"next",onClick:this.next,onKeyDown:function(){},tabIndex:-1,key:"next","aria-label":i({id:"next",defaultMessage:"Next"})},d.a.createElement(N.a,{img:"icon-icon_arrow-collapse--right"}))])},t}(d.a.Component);Ze.FIRST=0,Ze.displayName="ImageSlider",Ze.description=d.a.createElement("div",null,d.a.createElement("p",null,"Image slider wrapper"),d.a.createElement(de.a,{description:""},d.a.createElement(Ze,null,d.a.createElement("img",{src:"",alt:""}),d.a.createElement("img",{src:"",alt:""})))),Ze.propTypes={children:s.a.node.isRequired},Ze.contextTypes={intl:M.d.isRequired};var Ye=Ze;function Ke(e,t){var a=e.camera,i=e.lang,n=t.intl,r=a.names[i]||a.name,o=a.presets.filter((function(e){return le()().diff(le()(e.measuredTime),"hours")<24}));return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"traffic-camera",defaultMessage:"Traffic camera"}),description:r,icon:"icon-icon_camera-station",unlinked:!0}),Object(D.a)(o)?d.a.createElement("div",{className:"card-empty"},d.a.createElement(M.a,{id:"traffic-camera-no-recent-images",defaultMessage:"No recent images"})):d.a.createElement(Ye,null,o.map((function(e){return d.a.createElement("figure",{className:"slide",key:e.presetId},d.a.createElement("figcaption",null,e.presentationName,e.measuredTime&&" ("+le()(e.measuredTime).format("HH:mm:ss")+")"),d.a.createElement("img",{src:e.imageUrl,alt:e.presentationName,onClick:function(){window.open(e.imageUrl,"_blank")}}))})))))}Ke.displayName="CameraStationPopup",Ke.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a camera station popup."),d.a.createElement(de.a,{description:""},d.a.createElement(Ke,{context:"context object here"}))),Ke.propTypes={lang:s.a.string.isRequired,camera:s.a.object},Ke.contextTypes={intl:M.d.isRequired};var Je=O.a.createContainer(E()(Ke,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{camera:function(){return{children:[{fieldName:"cameraId",kind:"Field",metadata:{},type:"String"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"names",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedNames"},{children:[{fieldName:"presetId",kind:"Field",metadata:{},type:"String"},{fieldName:"presentationName",kind:"Field",metadata:{},type:"String"},{fieldName:"imageUrl",kind:"Field",metadata:{},type:"String"},{fieldName:"direction",kind:"Field",metadata:{},type:"String"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"String"}],fieldName:"presets",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"CameraPreset"},{fieldName:"__typename",kind:"Field",metadata:{isRequisite:!0},type:"String"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{isAbstract:!0},name:"CameraStationPopup_CameraRelayQL",type:"CameraInterface"}}}}),Xe=function(e){var t=e.comment,a=e.start,i=e.end,n=e.type,r=a?le()(a).format("DD.MM.YYYY"):"",o=i?le()(i).format("DD.MM.YYYY"):"";return d.a.createElement("div",{className:"roadwork-container"},d.a.createElement("div",{className:"insident-info"},n&&d.a.createElement("span",{className:"description"},n),d.a.createElement("span",{className:"duration"},r+" - "+o)),d.a.createElement("p",{className:"insident-message"},t))};Xe.displayName="RoadworkContent",Xe.description=d.a.createElement("div",null,d.a.createElement("p",null,"RendTimeers content of a roadwork popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(Xe,{comment:ce.d}))),Xe.propTypes={comment:s.a.string.isRequired,start:s.a.string.isRequired,end:s.a.string.isRequired,type:s.a.string};var $e=Xe;function et(e,t){var a=e.roadwork,i=e.lang,n=t.intl,r=t.router,o=t.location,s=t.config.defaultLanguage,l=a.startTime,c=a.endTime,m=a.description,u=a.geojson.features.map((function(e){return e.properties})),p=""+(u.length?u[0].firstName:"")+(u.length>1?" - "+u[u.length-1].firstName:""),f=m[i]||m[s]||"";return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"roadwork",defaultMessage:"Roadwork"}),description:p,icon:"icon-icon_roadwork",unlinked:!0}),d.a.createElement($e,{locationName:p,comment:f,start:l,end:c}),d.a.createElement("button",{className:"read-more",onClick:function(){r.push(Object(x.a)({},o,{state:Object(x.a)({},o.state,{moreInfoModalOpen:!0,moreInfoModalTitle:p,moreInfoModalContent:d.a.createElement($e,{comment:f,start:l,end:c})})}))}},n.formatMessage({id:"more",defaultMessage:"More"})+" >")))}et.displayName="RoadworkPopup",et.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a road work popup."),d.a.createElement(de.a,{description:""},d.a.createElement(et,{context:"context object here"}))),et.propTypes={roadwork:s.a.object.isRequired,lang:s.a.string.isRequired},et.contextTypes={intl:M.d.isRequired,router:A.routerShape.isRequired,location:A.locationShape.isRequired,config:s.a.shape({defaultLanguage:s.a.string}).isRequired};var tt=O.a.createContainer(E()(et,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{roadwork:function(){return{children:[{fieldName:"roadworkId",kind:"Field",metadata:{},type:"String"},{fieldName:"severity",kind:"Field",metadata:{},type:"String"},{fieldName:"status",kind:"Field",metadata:{},type:"String"},{fieldName:"startTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"endTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"description",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"},{fieldName:"geojson",kind:"Field",metadata:{},type:"FeatureCollectionObject"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"RoadworkPopup_RoadworkRelayQL",type:"Roadwork"}}}}),at=function(e){var t=e.comment,a=e.start,i=e.end,n=e.type,r=a?le()(a).format("DD.MM.YYYY"):"",o=i?le()(i).format("DD.MM.YYYY"):"";return d.a.createElement("div",{className:"disorder-container"},d.a.createElement("div",{className:"insident-info"},n&&d.a.createElement("span",{className:"description"},n),d.a.createElement("span",{className:"duration"},r+" - "+o)),d.a.createElement("p",{className:"insident-message"},t))};at.displayName="DisorderContent",at.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders content of a disorder popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(at,{comment:ce.d}))),at.propTypes={comment:s.a.string.isRequired,start:s.a.string,end:s.a.string,type:s.a.string};var it=at;function nt(e,t){var a=e.trafficDisorder,i=e.lang,n=t.intl,r=t.router,o=t.location,s=t.config.defaultLanguage;if(!a)return null;var l=a.startTime,c=a.endTime,m=a.description,u=a.geojson.features.map((function(e){return e.properties})),p=""+(u.length?u[0].firstName:"")+(u.length>1?" - "+u[u.length-1].firstName:""),f=m[i]||m[s]||"";return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"traffic-restriction",defaultMessage:"Traffic restriction"}),description:p,icon:"icon-icon_disorder",unlinked:!0}),d.a.createElement(it,{locationName:p,comment:f,start:l,end:c}),d.a.createElement("button",{className:"read-more",onClick:function(){r.push(Object(x.a)({},o,{state:Object(x.a)({},o.state,{moreInfoModalOpen:!0,moreInfoModalTitle:p,moreInfoModalContent:d.a.createElement(it,{comment:f,start:l,end:c})})}))}},n.formatMessage({id:"more",defaultMessage:"More"})+">")))}nt.displayName="DisorderPopup",nt.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a traffic disorder popup."),d.a.createElement(de.a,{description:""},d.a.createElement(nt,{context:"context object here"}))),nt.propTypes={trafficDisorder:s.a.object,lang:s.a.string.isRequired},nt.defaultProps={trafficDisorder:null},nt.contextTypes={intl:M.d.isRequired,router:A.routerShape.isRequired,location:A.locationShape.isRequired,config:s.a.shape({defaultLanguage:s.a.string}).isRequired};var rt=O.a.createContainer(E()(nt,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{trafficDisorder:function(){return{children:[{fieldName:"disorderId",kind:"Field",metadata:{},type:"String"},{fieldName:"severity",kind:"Field",metadata:{},type:"TrafficDisruptionSeverity"},{fieldName:"status",kind:"Field",metadata:{},type:"TrafficDisruptionValidityStatus"},{fieldName:"startTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"endTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"description",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"},{fieldName:"geojson",kind:"Field",metadata:{},type:"FeatureCollectionObject"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"DisorderPopup_TrafficDisorderRelayQL",type:"TrafficDisorder"}}}}),ot=function(e,t){var a=e.trafficAnnouncement,i=t.intl,n=a.severity,r=a.modesOfTransport,o=a.temporarySpeedLimit,s=a.trafficDirection,l=a.trafficDirectionFreeText,c=a.duration,m=a.additionalInfo,u=a.oversizeLoad,p=a.vehicleSizeLimit,f=a.url,g=a.imageUrls,h=Object(z.a)(l,i.locale);return!h&&s&&(h=i.formatMessage({id:"traffic-announcement-traffic-direction-"+s.toLowerCase(),defaultMessage:s})),d.a.createElement("ul",{className:"extended-content"},a.class&&a.class.map((function(e){return d.a.createElement("li",{key:e.class+"_"+e.subclass},d.a.createElement(M.a,{id:"traffic-announcement-class-"+e.class.toLowerCase(),defaultMessage:e.class},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),i.formatMessage({id:"traffic-announcement-subclass-"+e.subclass.toLowerCase(),defaultMessage:e.subclass}))})),r&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-modes-of-transport",defaultMessage:"Modes of transport"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),r.map((function(e){return i.formatMessage({id:"traffic-announcement-modes-of-transport-"+e.toLowerCase(),defaultMessage:e})})).join(", ")),n&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-severity",defaultMessage:"Severity"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),i.formatMessage({id:"traffic-announcement-severity-"+n.toLowerCase(),defaultMessage:n})),h&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-traffic-direction",defaultMessage:"Direction"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),h),o&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-temporary-speed-limit",defaultMessage:"Temporary speed limit"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),o+" km/h"),c&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-duration",defaultMessage:"Estimated duration"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),i.formatMessage({id:"traffic-announcement-duration-"+c.toLowerCase(),defaultMessage:c})),m&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-additional-info",defaultMessage:"Additional info"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),i.formatMessage({id:"traffic-announcement-additional-info-"+m.toLowerCase(),defaultMessage:m})),u&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-oversize-load",defaultMessage:"Special transport"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),u+" ",i.formatMessage({id:"traffic-announcement-oversize-load-definition",defaultMessage:"(W. x H. x L. in meters)"})),p&&d.a.createElement("li",null,d.a.createElement(M.a,{id:"traffic-announcement-vehicle-size-limit",defaultMessage:"Vehicle limitations"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return d.a.createElement("span",null,t+":")})),p+" ",i.formatMessage({id:"traffic-announcement-vehicle-size-limit-definition",defaultMessage:"(W. x H. x L. x Weight in meters and tons)"})),f&&d.a.createElement("li",{className:"link"},d.a.createElement("a",{href:f,target:"_blank",rel:"noopener noreferrer"},f)),g&&g.map((function(e,t){return d.a.createElement("li",{key:"image_"+t},d.a.createElement("img",{src:e,alt:"",onClick:function(){window.open(e,"_blank")}}))})))};ot.propTypes={trafficAnnouncement:s.a.object.isRequired},ot.contextTypes={intl:M.d.isRequired};var st=function(e,t){var a=e.trafficAnnouncement,i=e.lang,n=e.type,r=t.defaultLanguage,o=a.startTime,s=a.endTime,l=a.description,c=l[i]||l[r]||"",m=o?le()(o).format("DD.MM.YYYY HH:mm"):"",u=s?le()(s).format("DD.MM.YYYY HH:mm"):"";return d.a.createElement("div",{className:"disorder-container"},d.a.createElement("div",{className:"insident-info insident-info-announcement"},d.a.createElement("span",{className:"duration"},m+" - "+u)),d.a.createElement("p",{className:"insident-message"},c),"extended"===n&&d.a.createElement(ot,{trafficAnnouncement:a}))};st.displayName="TrafficAnnouncementContent",st.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders content of a traffic announcement popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(st,{comment:ce.d}))),st.propTypes={trafficAnnouncement:s.a.object.isRequired,lang:s.a.string.isRequired,type:s.a.string},st.defaultProps={type:""},st.contextTypes={config:s.a.shape({defaultLanguage:s.a.string}).isRequired};var lt=E()(st,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}}));function dt(e,t){var a=e.trafficAnnouncement,i=e.lang,n=t.intl,r=t.router,o=t.location,s=t.config.defaultLanguage;if(!a)return null;var l=a.title[i]||a.title[s]||"";return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"traffic-restriction",defaultMessage:"Traffic restriction"}),description:l,icon:"icon-icon_disorder",unlinked:!0}),d.a.createElement(lt,{trafficAnnouncement:a}),d.a.createElement("button",{className:"read-more",onClick:function(){r.push(Object(x.a)({},o,{state:Object(x.a)({},o.state,{moreInfoModalOpen:!0,moreInfoModalTitle:l,moreInfoModalContent:d.a.createElement(lt,{trafficAnnouncement:a,type:"extended"})})}))}},n.formatMessage({id:"more",defaultMessage:"More"})+">")))}dt.displayName="TrafficAnnouncementPopup",dt.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a traffic announcement popup."),d.a.createElement(de.a,{description:""},d.a.createElement(dt,{context:"context object here"}))),dt.propTypes={trafficAnnouncement:s.a.object,lang:s.a.string.isRequired},dt.defaultProps={trafficAnnouncement:null},dt.contextTypes={intl:M.d.isRequired,router:A.routerShape.isRequired,location:A.locationShape.isRequired,config:s.a.shape({defaultLanguage:s.a.string}).isRequired};var ct=O.a.createContainer(E()(dt,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{trafficAnnouncement:function(){return{children:[{fieldName:"announcementId",kind:"Field",metadata:{},type:"String"},{children:[{fieldName:"class",kind:"Field",metadata:{},type:"String"},{fieldName:"subclass",kind:"Field",metadata:{},type:"String"}],fieldName:"class",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"TrafficDisruptionClass"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"description",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"},{fieldName:"severity",kind:"Field",metadata:{},type:"TrafficDisruptionSeverity"},{fieldName:"status",kind:"Field",metadata:{},type:"TrafficDisruptionValidityStatus"},{fieldName:"startTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"endTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"geojson",kind:"Field",metadata:{},type:"FeatureCollectionObject"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"title",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"},{fieldName:"modesOfTransport",kind:"Field",metadata:{isPlural:!0},type:"TrafficDisruptionModeOfTransport"},{fieldName:"trafficDirection",kind:"Field",metadata:{},type:"String"},{children:[{fieldName:"fi",kind:"Field",metadata:{},type:"String"},{fieldName:"sv",kind:"Field",metadata:{},type:"String"},{fieldName:"en",kind:"Field",metadata:{},type:"String"}],fieldName:"trafficDirectionFreeText",kind:"Field",metadata:{canHaveSubselections:!0},type:"LocalizedString"},{fieldName:"temporarySpeedLimit",kind:"Field",metadata:{},type:"Int"},{fieldName:"duration",kind:"Field",metadata:{},type:"String"},{fieldName:"additionalInfo",kind:"Field",metadata:{},type:"String"},{fieldName:"detour",kind:"Field",metadata:{},type:"FeatureCollectionObject"},{fieldName:"oversizeLoad",kind:"Field",metadata:{},type:"String"},{fieldName:"vehicleSizeLimit",kind:"Field",metadata:{},type:"String"},{fieldName:"url",kind:"Field",metadata:{},type:"String"},{fieldName:"imageUrls",kind:"Field",metadata:{isPlural:!0},type:"String"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"TrafficAnnouncementPopup_TrafficAnnouncementRelayQL",type:"TrafficAnnouncement"}}}}),mt=/^(d|n)([1][0-4][0-2])$/;var ut=function(e){var t=e.forecasts,a=e.measuredTime;return d.a.createElement("table",{className:"road-condition-content"},d.a.createElement("thead",null,d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-condition-time",defaultMessage:"Time"})),d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-condition-weather",defaultMessage:"Weather"})),d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-condition-wind",defaultMessage:"Wind"})),d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-condition-air",defaultMessage:"Air"})),d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-condition-road",defaultMessage:"Road"})),d.a.createElement("td",null,d.a.createElement(M.a,{id:"road-condition-condition",defaultMessage:"Condition"})))),d.a.createElement("tbody",null,t.map((function(e){var t={NORMAL_CONDITION:"normal",POOR_CONDITION:"poor",EXTREMELY_POOR_CONDITION:"extremely-poor",CONDITION_COULD_NOT_BE_RESOLVED:"unresolved"}[e.overallRoadCondition],a=function(e){return mt.test(e)?e.slice(0,1)+"100":e}(e.weatherSymbol);return d.a.createElement("tr",{key:e.forecastName},d.a.createElement("td",null,"OBSERVATION"===e.type?d.a.createElement(M.a,{id:"road-condition-now",defaultMessage:"Now"}):e.forecastName),d.a.createElement("td",null,d.a.createElement("img",{src:"https://developer.foreca.com/static/images/symbols/"+a+".png",style:{width:"35px"},alt:"weather-symbol"})),d.a.createElement("td",null,e.windSpeed),d.a.createElement("td",null,e.temperature,"Â°"),d.a.createElement("td",null,e.roadTemperature,"Â°"),d.a.createElement("td",null,d.a.createElement("div",{className:"road-condition-symbol "+t})))})),a&&d.a.createElement("tr",null,d.a.createElement("td",{colSpan:6,className:"last-updated"},d.a.createElement(M.a,{id:"last-updated",defaultMessage:"Last updated"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),le()(a).format("HH:mm:ss")||""))))};ut.displayName="TmsStationContent",ut.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders content for a road condition popup"),d.a.createElement(de.a,{description:""},d.a.createElement(ut,{comment:ce.d}))),ut.propTypes={forecasts:s.a.array.isRequired,measuredTime:s.a.string.isRequired};var pt=ut;function ft(e,t){var a=e.station,i=t.intl,n=Object(z.a)(a,"geojson.features[0].properties.description");return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:i.formatMessage({id:"road-condition",defaultMessage:"Road condition"}),description:n,icon:"icon-icon_road_condition",unlinked:!0}),d.a.createElement(pt,{forecasts:a.roadConditionForecasts,measuredTime:a.measuredTime})))}ft.displayName="TmsStationPopup",ft.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a road condition popup."),d.a.createElement(de.a,{description:""},d.a.createElement(ft,{context:"context object here"}))),ft.propTypes={station:s.a.object.isRequired},ft.contextTypes={intl:M.d.isRequired};var gt=O.a.createContainer(ft,{fragments:{station:function(){return{children:[{fieldName:"roadConditionId",kind:"Field",metadata:{},type:"String"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{children:[{fieldName:"forecastName",kind:"Field",metadata:{},type:"String"},{fieldName:"type",kind:"Field",metadata:{},type:"String"},{fieldName:"weatherSymbol",kind:"Field",metadata:{},type:"String"},{fieldName:"windSpeed",kind:"Field",metadata:{},type:"Float"},{fieldName:"windDirection",kind:"Field",metadata:{},type:"Int"},{fieldName:"roadTemperature",kind:"Field",metadata:{},type:"String"},{fieldName:"temperature",kind:"Field",metadata:{},type:"String"},{fieldName:"overallRoadCondition",kind:"Field",metadata:{},type:"String"},{fieldName:"reliability",kind:"Field",metadata:{},type:"String"}],fieldName:"roadConditionForecasts",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"RoadConditionForecast"},{fieldName:"geojson",kind:"Field",metadata:{},type:"FeatureCollectionObject"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"RoadConditionPopup_StationRelayQL",type:"RoadCondition"}}}}),ht=a("./app/constants.js");function yt(e,t){var a=e.maintenanceVehicleRouteEvent,i=t.intl,n=a.jobIds.includes(ht.p),r=n&&a.vehicleType===ht.l.Bicycle?"icon-icon_bicycle":"icon-icon_maintenance-vehicle";return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:i.formatMessage({id:n?"roadinspection":"maintenance",defaultMessage:n?"Road inspection":"Maintenance"}),description:i.formatMessage({id:"maintenance-job-realization"}),icon:r,unlinked:!0}),d.a.createElement(M.a,{id:"maintenance-job",defaultMessage:"Maintenance job"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+":"})),d.a.createElement("ul",{className:"maintenance-vehicle-job-list"},function(e,t,a){void 0===a&&(a=6);var i=[].concat(e.jobIds.map((function(t){return{jobId:t,date:le()(e.measuredTime),vehicleType:e.vehicleType}})));return Object(z.a)(e,"previousRouteEvents",[]).forEach((function(e){e.jobIds.filter((function(e){return t?e===ht.p:e!==ht.p})).forEach((function(t){i.push({jobId:t,date:le()(e.measuredTime),vehicleType:e.vehicleType})}))})),i.length>a?i.slice(0,a):i}(a,n).map((function(e){var t="string"==typeof e.vehicleType?e.vehicleType.toLowerCase():"unknown";return d.a.createElement("li",{key:"job-"+e.jobId+"-"+e.date.unix()},d.a.createElement(M.a,{id:"maintenance-job-"+e.jobId},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),e.jobId===ht.p&&i.formatMessage({id:"maintenance-inspection-vehicle-type-"+t}),e.date.format("D.M.Y HH:mm:ss"))})))))}yt.displayName="MaintenanceVehicleRoutePopup",yt.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a maintenance vehicle route popup."),d.a.createElement(de.a,{description:""},d.a.createElement(yt,{context:"context object here"}))),yt.propTypes={maintenanceVehicleRouteEvent:s.a.shape({id:s.a.string,routeEventId:s.a.string,routeType:s.a.string,measuredTime:s.a.string,contractId:s.a.number,jobIds:s.a.arrayOf(s.a.number),geojson:s.a.shape({type:s.a.string,geometry:s.a.shape({type:s.a.string,coordinates:s.a.arrayOf(s.a.arrayOf(s.a.number))})})}).isRequired},yt.contextTypes={intl:M.d.isRequired};var bt=O.a.createContainer(yt,{fragments:{maintenanceVehicleRouteEvent:function(){return{children:[{fieldName:"id",kind:"Field",metadata:{isRequisite:!0},type:"ID"},{fieldName:"routeEventId",kind:"Field",metadata:{},type:"String"},{fieldName:"routeType",kind:"Field",metadata:{},type:"MaintenanceVehicleRouteEventType"},{fieldName:"vehicleType",kind:"Field",metadata:{},type:"MaintenanceVehicleType"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"contractId",kind:"Field",metadata:{},type:"Int"},{fieldName:"jobIds",kind:"Field",metadata:{isPlural:!0},type:"Int"},{fieldName:"geojson",kind:"Field",metadata:{},type:"FeatureObject"},{calls:[{kind:"Call",metadata:{type:"Int"},name:"limit",value:{kind:"CallValue",callValue:12}}],children:[{fieldName:"routeEventId",kind:"Field",metadata:{},type:"String"},{fieldName:"vehicleType",kind:"Field",metadata:{},type:"MaintenanceVehicleType"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"jobIds",kind:"Field",metadata:{isPlural:!0},type:"Int"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"previousRouteEvents",kind:"Field",metadata:{canHaveSubselections:!0,inferredRootCallName:"node",inferredPrimaryKey:"id",isPlural:!0},type:"MaintenanceVehicleRouteEvent"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"MaintenanceVehicleRoutePopup_MaintenanceVehicleRouteEventRelayQL",type:"MaintenanceVehicleRouteEvent"}}}}),vt=a("./app/util/suggestionUtils.js"),Et=a("./app/util/xhrPromise.js"),St=a("./app/component/Loading.js"),kt=a("./app/util/authUtils.js"),Nt=function(e){function t(t){var a;return(a=e.call(this,t)||this).state={loading:!0,location:{lat:a.props.lat,lon:a.props.lon}},a}Object(r.a)(t,e);var a=t.prototype;return a.componentDidMount=function(){var e=this,t=this.context.getStore("PreferencesStore").getLanguage(),a=Object(kt.a)(this.context.config,this.context.config.URL.PELIAS_REVERSE_GEOCODER);Object(Et.a)(a,{"point.lat":this.props.lat,"point.lon":this.props.lon,"boundary.circle.lat":this.props.lat,"boundary.circle.lon":this.props.lon,"boundary.circle.radius":.1,lang:t,size:1,layers:"address"}).then((function(t){if(null!=t.features&&t.features.length>0){var a=t.features[0].properties;e.setState({loading:!1,location:Object(x.a)({},e.state.location,{address:Object(vt.c)(a)})})}else e.setState({loading:!1,location:Object(x.a)({},e.state.location,{address:e.context.intl.formatMessage({id:"location-from-map",defaultMessage:"Selected location"})})})}),(function(){e.setState({loading:!1,location:{address:e.context.intl.formatMessage({id:"location-from-map",defaultMessage:"Selected location"})}})}))},a.render=function(){return this.state.loading?d.a.createElement("div",{className:"card smallspinner",style:{height:"4rem"}},d.a.createElement(St.a,null)):d.a.createElement(re.a,null,d.a.createElement("div",{className:"padding-small"},d.a.createElement(oe.a,{name:this.state.location.address,description:this.props.name,unlinked:!0,className:"padding-small"})),d.a.createElement(ve.a,{location:this.state.location}))},t}(d.a.Component);Nt.contextTypes={config:s.a.object.isRequired,getStore:s.a.func.isRequired,intl:M.d.isRequired},Nt.propTypes={name:s.a.string.isRequired,lat:s.a.number.isRequired,lon:s.a.number.isRequired};var Rt=Nt,jt=a("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),wt=a("./node_modules/lodash-es/flatten.js"),Tt=a("./node_modules/lodash-es/omit.js"),Ct=a("./node_modules/@turf/boolean-point-in-polygon/dist/esm/index.js"),xt=a("./node_modules/@turf/helpers/dist/esm/index.js"),Ft=a("./node_modules/@turf/nearest-point-on-line/dist/esm/index.js"),Ot=a("./app/util/mapLayerUtils.js"),At=["map"],Mt=function(e,t,a,i,n,r){var o=this;this.project=function(e){var t=o.extent*Math.pow(2,o.coords.z+(o.props.zoomOffset||0)),a=o.extent*o.coords.x,i=o.extent*o.coords.y,n=180-360*(e.y+i)/t;return{lon:360*(e.x+a)/t-180,lat:360/Math.PI*Math.atan(Math.exp(n*(Math.PI/180)))-90}},this.createElement=function(){var e=document.createElement("canvas");return e.setAttribute("class","leaflet-tile"),e.setAttribute("height",o.tileSize),e.setAttribute("width",o.tileSize),e.onMapClick=o.onMapClick,e},this.onMapClick=function(e,t){var a,i,n;return!!o.layers&&(n=[t[0]*o.scaleratio%o.tileSize,t[1]*o.scaleratio%o.tileSize],i=Object(wt.a)(o.layers.map((function(e){return e.features&&e.features.map((function(t){return{layer:e.constructor.getName(),feature:t,map:e.tile.map}}))}))),a=i.map((function(t){if(!t)return null;if(t.feature.polygon){var a=Object(x.a)({},t),i=a.feature.polygon.map((function(e){return[e.x/o.ratio,e.y/o.ratio]}));return Object(Ct.a)(Object(xt.h)(n),Object(xt.i)([i]))?(a.feature.geom={x:n[0]*o.ratio,y:n[1]*o.ratio},a):null}if(t.feature.lineString){var r=Object(x.a)({},t),s=r.feature.lineString.map((function(e){var t=o.project(e);return[t.lon,t.lat]})),l=Object(Ft.a)(Object(xt.g)(s),Object(xt.h)([e.latlng.lng,e.latlng.lat])),d=t.map.latLngToLayerPoint(b.a.latLng(e.latlng.lat,e.latlng.lng)),c=t.map.latLngToLayerPoint(b.a.latLng(l.geometry.coordinates[1],l.geometry.coordinates[0])),m=d.distanceTo(c);return m<20?(r.feature.dist=m,r.feature.geom={x:n[0]*o.ratio,y:n[1]*o.ratio},r):null}var u=t.feature.geom;return Math.sqrt(Math.pow(n[0]-u.x/o.ratio,2)+Math.pow(n[1]-u.y/o.ratio,2))<22*o.scaleratio?t:null})).map((function(e){if(e){e.map;return Object(jt.a)(e,At)}return e})).filter((function(e){return null!==e})),"click"===e.type?(o.timer?(clearTimeout(o.timer),o.timer=null):o.timer=setTimeout((function(){if(o.timer=null,0===a.length)return o.onSelectableTargetClicked([],e.latlng);if(1===a.length){b.a.DomEvent.stopPropagation(e);var t=b.a.latLng(o.project(a[0].feature.geom));return o.onSelectableTargetClicked(a,t)}return b.a.DomEvent.stopPropagation(e),o.onSelectableTargetClicked(a,e.latlng)}),300),!1):"contextmenu"===e.type&&0===a.length?o.onSelectableTargetClicked([],e.latlng):(b.a.DomEvent.stopPropagation(e),o.onSelectableTargetClicked(a,e.latlng)))};var s=Math.min(i.cityBike.cityBikeMinZoom,i.stopsMinZoom,i.terminalStopsMinZoom,i.parkAndRide.parkAndRideMinZoom,i.ticketSales.ticketSalesMinZoom,i.parkingStations.parkingStationsMinZoom,i.roadworks.roadworksMinZoom,i.disorders.disordersMinZoom,i.cameraStations.cameraStationsMinZoom,i.weatherStations.weatherStationsMinZoom,i.cityWeatherStations.cityWeatherStationsMinZoom,i.tmsStations.tmsStationsMinZoom,i.roadConditions.roadConditionsMinZoom,i.fluencies.fluenciesMinZoom,i.ecoCounters.ecoCounterMinZoom,i.maintenanceVehicles.maintenanceVehiclesMinZoom,i.bicycleRoutes.bicycleRoutesMinZoon);this.coords=e,this.props=a,this.extent=4096,this.scaleratio=R.c&&window.devicePixelRatio||1,this.tileSize=(this.props.tileSize||256)*this.scaleratio,this.ratio=this.extent/this.tileSize,this.el=this.createElement(),this.clickCount=0,this.map=r,this.coords.z<s||!this.el.getContext?setTimeout((function(){return t(null,o.el)}),0):(this.ctx=this.el.getContext("2d"),this.layers=this.props.layers.filter((function(e){var t=e.getName(),a=Object(Ot.b)(t,o.props.mapLayers);return"stop"===t&&(o.coords.z>=i.stopsMinZoom||o.coords.z>=i.terminalStopsMinZoom)||"citybike"===t&&o.coords.z>=i.cityBike.cityBikeMinZoom||"parkAndRide"===t&&o.coords.z>=i.parkAndRide.parkAndRideMinZoom||"ticketSales"===t&&o.coords.z>=i.ticketSales.ticketSalesMinZoom||"parkingStations"===t&&o.coords.z>=i.parkingStations.parkingStationsMinZoom||"roadworks"===t&&o.coords.z>=i.roadworks.roadworksMinZoom||"disorders"===t&&o.coords.z>=i.disorders.disordersMinZoom||"cameraStations"===t&&o.coords.z>=i.cameraStations.cameraStationsMinZoom||"weatherStations"===t&&o.coords.z>=i.weatherStations.weatherStationsMinZoom||"cityWeatherStations"===t&&o.coords.z>=i.cityWeatherStations.cityWeatherStationsMinZoom||"tmsStations"===t&&o.coords.z>=i.tmsStations.tmsStationsMinZoom||"roadConditions"===t&&o.coords.z>=i.roadConditions.roadConditionsMinZoom||"maintenanceVehicles"===t&&o.coords.z>=i.maintenanceVehicles.maintenanceVehiclesMinZoom||"realtimeMaintenanceVehicles"===t&&o.coords.z>=i.maintenanceVehicles.maintenanceVehiclesMinZoom||"roadInspectionVehicles"===t&&o.coords.z>=i.roadInspectionVehicles.roadInspectionVehiclesMinZoom||"fluencies"===t&&o.coords.z>=i.fluencies.fluenciesMinZoom||"ecoCounters"===t&&o.coords.z>=i.ecoCounters.ecoCounterMinZoom||"roadSigns"===t&&o.coords.z>=i.roadSigns.roadSignsMinZoom?a:"bicycleRoutesMainRegional"===t&&o.coords.z>=i.bicycleRoutes.bicycleRoutesMinZoom||"bicycleRouteTypes"===t&&o.coords.z>=i.bicycleRoutes.bicycleRoutesMinZoom?a&&Object(Ot.b)("bicycleRoutes",o.props.mapLayers):("bicycleRoutesBaana"===t&&o.coords.z>=i.bicycleRoutes.bicycleRoutesMinZoom||"bicycleRoutesBrand"===t&&o.coords.z>=i.bicycleRoutes.bicycleRoutesMinZoom)&&a&&Object(Ot.b)("bicycleRoutes",o.props.mapLayers)})).map((function(e){return new e(o,i,o.props.mapLayers,o.props.mapLayerOptions,n)})),this.el.layers=this.layers.map((function(e){return Object(Tt.a)(e,"tile")})),Promise.all(this.layers.map((function(e){return e.promise}))).then((function(){return t(null,o.el)})))},It=a("./app/store/MapLayerStore.js"),_t=a("./app/store/MapLayerOptionsStore.js"),Lt=a("./app/store/MaintenanceVehicleTailStore.js"),Pt=a("./app/component/map/popups/EcoCounterPopup.js"),Dt=function(e){var t,a=e.label,i=e.value;return d.a.createElement("tr",null,d.a.createElement("td",null,a),d.a.createElement("td",null,(t=i,Array.isArray(t)?t.map((function(e){var t=e.rowNumber,a=e.text;return d.a.createElement("div",{key:t},a)})):d.a.createElement("div",null,t))))};Dt.propTypes={label:s.a.string.isRequired,value:s.a.oneOfType([s.a.string,s.a.array]).isRequired};var qt=function(e,t){var a=e.roadSign,i=t.intl;return d.a.createElement("div",{className:"roadsign-container"},d.a.createElement("table",{className:"component-list"},d.a.createElement("tbody",null,a.type&&d.a.createElement(Dt,{label:i.formatMessage({id:"road-sign-type"}),value:i.formatMessage({id:"road-sign-"+a.type})}),"SPEEDLIMIT"===a.type&&a.displayValue&&d.a.createElement(Dt,{label:i.formatMessage({id:"road-sign-display-value"}),value:a.displayValue}),"INFORMATION"===a.type&&Array.isArray(a.textRows)&&a.textRows.length>0&&d.a.createElement(Dt,{label:i.formatMessage({id:"road-sign-display-value"}),value:a.textRows}),"WARNING"===a.type&&a.displayValue&&d.a.createElement(Dt,{label:i.formatMessage({id:"road-sign-display-value"}),value:i.formatMessage({id:"road-sign-warning-"+a.displayValue})}),a.effectDate&&d.a.createElement(Dt,{label:i.formatMessage({id:"road-sign-effective-from"}),value:le.a.utc(a.effectDate).format("DD.MM.YYYY HH:mm")}))))};qt.displayName="RoadSignContent",qt.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders content of a road sign popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(qt,{comment:ce.d}))),qt.propTypes={roadSign:s.a.object.isRequired},qt.contextTypes={intl:M.d.isRequired};var Vt=qt,zt=a("./app/util/mapIconUtils.js");function Ut(e,t){var a=e.roadSign,i=t.intl;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:i.formatMessage({id:"road-sign",defaultMessage:"Road sign"}),description:a.roadSignId,icon:Object(zt.E)(a.type,a.displayValue,a.severity),unlinked:!0}),d.a.createElement(Vt,{roadSign:a})))}Ut.displayName="TmsStationPopup",Ut.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a road condition popup."),d.a.createElement(de.a,{description:""},d.a.createElement(Ut,{context:"context object here"}))),Ut.propTypes={roadSign:s.a.object.isRequired},Ut.contextTypes={intl:M.d.isRequired};var Bt=O.a.createContainer(Ut,{fragments:{roadSign:function(){return{children:[{fieldName:"roadSignId",kind:"Field",metadata:{},type:"String"},{fieldName:"type",kind:"Field",metadata:{},type:"VariableRoadSignType"},{fieldName:"direction",kind:"Field",metadata:{},type:"VariableRoadSignDirection"},{fieldName:"carriageway",kind:"Field",metadata:{},type:"VariableRoadSignPlacement"},{fieldName:"displayValue",kind:"Field",metadata:{},type:"String"},{fieldName:"effectDate",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"cause",kind:"Field",metadata:{},type:"VariableRoadSignCause"},{fieldName:"reliability",kind:"Field",metadata:{},type:"VariableRoadSignReliability"},{fieldName:"roadAddress",kind:"Field",metadata:{},type:"String"},{fieldName:"lat",kind:"Field",metadata:{},type:"Float"},{fieldName:"lon",kind:"Field",metadata:{},type:"Float"},{fieldName:"severity",kind:"Field",metadata:{},type:"VariableRoadSignSeverity"},{children:[{fieldName:"screen",kind:"Field",metadata:{},type:"Int"},{fieldName:"rowNumber",kind:"Field",metadata:{},type:"Int"},{fieldName:"text",kind:"Field",metadata:{},type:"String"}],fieldName:"textRows",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"VariableRoadSignTextRow"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"RoadSignPopup_RoadSignRelayQL",type:"VariableRoadSign"}}}}),Wt=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);Wt.queries={roadSign:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"variableRoadSign",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"RoadSignRoute",type:"VariableRoadSign"}}},Wt.paramDefinitions={id:{required:!0}},Wt.routeName="RoadSignRoute";var Gt=function(e){var t=e.label,a=e.value;return d.a.createElement("tr",null,d.a.createElement("td",null,t),d.a.createElement("td",null,d.a.createElement("span",null,a)))};Gt.propTypes={label:s.a.string.isRequired,value:s.a.string.isRequired};var Ht=function(e,t){var a=e.name,i=e.length,n=e.year,r=t.intl;return d.a.createElement("div",{className:"roadsign-container"},d.a.createElement("table",{className:"component-list"},d.a.createElement("tbody",null,a&&d.a.createElement(Gt,{label:r.formatMessage({id:"bicycle-route-prop-name"}),value:a}),n&&d.a.createElement(Gt,{label:r.formatMessage({id:"bicycle-route-prop-year"}),value:""+n}),i&&d.a.createElement(Gt,{label:r.formatMessage({id:"bicycle-route-prop-length"}),value:i+" m"}))))};Ht.displayName="BicycleRouteContent",Ht.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders content of a bicycle route popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(Ht,{comment:ce.d}))),Ht.propTypes={name:s.a.string,length:s.a.number,year:s.a.number},Ht.defaultProps={name:void 0,length:void 0,year:void 0},Ht.contextTypes={intl:M.d.isRequired};var Qt=Ht,Zt=a("./app/util/bicycleRouteUtils.js"),Yt=function(e,t){var a=t.intl,i=Object(Zt.a)(e.layer,e.type);if(i){var n=ht.d[i]?ht.d[i].color:void 0;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:a.formatMessage({id:"bicycle-routes-"+i,defaultMessage:"Bicycle route"}),description:"null",icon:"icon-icon_bicycle-withoutBox",iconColor:n,unlinked:!0}),d.a.createElement(Qt,e)))}return null};Yt.displayName="BicycleRoutePopup",Yt.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a bicycle route popup."),d.a.createElement(de.a,{description:""},d.a.createElement(Yt,{context:"context object here"}))),Yt.propTypes={},Yt.contextTypes={intl:M.d.isRequired};var Kt=Yt,Jt=a("./node_modules/fluxible-addons-react/index.js"),Xt=a("./node_modules/lodash-es/lodash.default.js"),$t=function(e){var t=e.id,a=e.defaultMessage,i=e.sensor;return i?void 0===i.sensorValue||void 0===i.sensorUnit?null:d.a.createElement("td",null,d.a.createElement("table",{className:"sensor-info"},d.a.createElement("tbody",null,d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:t,defaultMessage:a},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return""+t})))),d.a.createElement("tr",null,d.a.createElement("td",null,i.sensorValue)),d.a.createElement("tr",null,d.a.createElement("td",null,i.sensorUnit))))):null};$t.propTypes={id:s.a.string.isRequired,defaultMessage:s.a.string.isRequired,sensor:s.a.object},$t.defaultProps={sensor:void 0};var ea=function(e){var t=e.id,a=e.onClick;return d.a.createElement("td",{key:t},d.a.createElement("div",{className:"camera-icon-container",onClick:a},d.a.createElement(N.a,{img:"icon-icon_camera-station",className:"camera-icon"})))};ea.propTypes={id:s.a.string.isRequired,onClick:s.a.func.isRequired};var ta=function(e,t){var a=e.getWindDirection,i=e.toggleView,n=e.toggleImageView,r=e.station,o=t.intl,s=r.cameras,l=r.sensorValues,c=l.find((function(e){return"SNOW_DEPTH"===e.name})),m=l.find((function(e){return"RAINFALL_DEPTH"===e.name})),u=l.find((function(e){return"AIR_RELATIVE_HUMIDITY"===e.name})),p=l.find((function(e){return"WIND_DIRECTION"===e.name})),f=l.find((function(e){return"WIND_SPEED"===e.name})),g=l.find((function(e){return"AIR_TEMPERATURE"===e.name})),h=l.find((function(e){return"ROAD_SURFACE_TEMPERATURE"===e.name})),y=g.measuredTime,b=r.name,v={cameras:s,localName:b},E=[[{id:"air-temperature",defaultMessage:"Air temperature",sensor:g,Component:$t},{id:"road-temperature",defaultMessage:"Road temperature",sensor:h,Component:$t}],[{id:"wind-speed",defaultMessage:"Wind speed",sensor:f,Component:$t},{id:"wind-direction",defaultMessage:"Wind direction",sensor:void 0===p.sensorValue?void 0:{sensorValue:d.a.createElement(M.a,{id:a(p.sensorValue),defaultMessage:"North"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),sensorUnit:p.sensorValue+"Â°"},Component:$t}],[{id:"air-humidity",defaultMessage:"Air humidity",sensor:Object(x.a)({},u,{sensorUnit:"%"}),Component:$t},{id:"rainfall-depth",defaultMessage:"Rainfall depth",sensor:m,Component:$t}],[{id:"snow-depth",defaultMessage:"snow-depth",sensor:c,Component:$t},{id:"camera",onClick:function(){return n(v)},Component:ea}]];return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:o.formatMessage({id:"weather-station",defaultMessage:"Weather station"}),description:b,icon:"icon-icon_weather-station",unlinked:!0}),d.a.createElement("table",{className:"component-list"},d.a.createElement("tbody",null,E.map((function(e){return d.a.createElement("tr",{key:Xt.a.uniqueId()},e.map((function(e){var t=e.Component;return d.a.createElement(t,Object.assign({key:Xt.a.uniqueId()},e))})))})),y&&d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2,className:"updated"},d.a.createElement(M.a,{id:"last-updated",defaultMessage:"Last updated"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),le()(y).format("HH:mm:ss")||"")),d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2},d.a.createElement("div",{"aria-hidden":"true",className:"text-button",onClick:function(){return i()}},o.formatMessage({id:"show-information-as-list",defaultMessage:"Show information as list"})+" >")))))))};ta.displayName="CityWeatherStationContentTable",ta.description=d.a.createElement("div",null,d.a.createElement("p",null,"City Weather station content"),d.a.createElement(de.a,{description:""},d.a.createElement(ta,{comment:ce.d}))),ta.propTypes={station:s.a.object.isRequired,getWindDirection:s.a.func.isRequired,toggleView:s.a.func.isRequired,toggleImageView:s.a.func.isRequired},ta.contextTypes={intl:M.d.isRequired};var aa=O.a.createContainer(Object(Jt.connectToStores)(ta,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{station:function(){return{children:[{fieldName:"weatherStationId",kind:"Field",metadata:{},type:"String"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"lon",kind:"Field",metadata:{},type:"Float"},{fieldName:"lat",kind:"Field",metadata:{},type:"Float"},{children:[{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"sensorValue",kind:"Field",metadata:{},type:"Float"},{fieldName:"sensorUnit",kind:"Field",metadata:{},type:"String"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"GraphQLDateTime"}],fieldName:"sensorValues",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"CityWeatherStationSensorValue"},{children:[{fieldName:"cameraId",kind:"Field",metadata:{},type:"Int"},{fieldName:"imageUrl",kind:"Field",metadata:{},type:"String"}],fieldName:"cameras",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"CityWeatherStationCamera"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"CityWeatherStationContentTable_StationRelayQL",type:"CityWeatherStation"}}}}),ia=function(e){var t=e.id,a=e.defaultMessage,i=e.sensor;return void 0===i||void 0===i.sensorValue||void 0===i.sensorUnit?null:d.a.createElement("tr",null,d.a.createElement("td",null,d.a.createElement(M.a,{id:t,defaultMessage:a},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "+i.sensorUnit}))),d.a.createElement("td",null,i.sensorValue))};ia.propTypes={id:s.a.string.isRequired,defaultMessage:s.a.string.isRequired,sensor:s.a.object},ia.defaultProps={sensor:void 0};var na={0:"no-rain",98:"has-rain",4:"light-snow",5:"moderate-snow",6:"heavy-snow"},ra=function(e,t){var a,i,n=e.toggleView,r=e.station,o=e.getWindDirection,s=t.intl,l=r.sensorValues,c=l.find((function(e){return"DEW_POINT_TEMPERATURE"===e.name})),m=l.find((function(e){return"SNOW_DEPTH"===e.name})),u=l.find((function(e){return"RAINFALL_INTENSITY"===e.name})),p=l.find((function(e){return"RAINFALL_DEPTH"===e.name})),f=l.find((function(e){return"RAIN_CLASSIFICATION"===e.name})),g=l.find((function(e){return"AIR_RELATIVE_HUMIDITY"===e.name})),h=l.find((function(e){return"WIND_DIRECTION"===e.name})),y=l.find((function(e){return"WIND_SPEED"===e.name})),b=l.find((function(e){return"AIR_TEMPERATURE"===e.name})),v=l.find((function(e){return"ROAD_SURFACE_TEMPERATURE"===e.name})),E=[{id:"air-temperature",defaultMessage:"Air temperature",sensor:b,Component:ia},{id:"air-humidity",defaultMessage:"Air humidity",sensor:Object(x.a)({},g,{sensorUnit:"%"}),Component:ia},{id:"dew-point-temperature",defaultMessage:"Dew point temperature",sensor:Object(x.a)({},c,{sensorUnit:"%"}),Component:ia},{id:"wind-speed",defaultMessage:"Wind speed",sensor:y,Component:ia},{id:"wind-direction",defaultMessage:"Wind direction",sensor:void 0===h?void 0:{sensorValue:d.a.createElement(M.a,{id:o(h.sensorValue),defaultMessage:"North"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),sensorUnit:""},Component:ia},{id:"rainfall-depth",defaultMessage:"Rainfall depth",sensor:p,Component:ia},{id:"rainfall-intensity",defaultMessage:"Rainfall intensity",sensor:u,Component:ia},{id:"snow-depth",defaultMessage:"Snow depth",sensor:m,Component:ia},{id:"rain-classification",defaultMessage:"Rain classification",sensor:void 0===f?void 0:{sensorValue:d.a.createElement(M.a,{id:(a=f.sensorValue,i=na[a],null==i?"no-rain":i),defaultMessage:"North"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),sensorUnit:""},Component:ia},{id:"road-temperature",defaultMessage:"Road temperature",sensor:v,Component:ia}],S=b.measuredTime,k=r.name;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:s.formatMessage({id:"weather-station",defaultMessage:"Weather station"}),description:k,icon:"icon-icon_weather-station",unlinked:!0}),d.a.createElement("table",{className:"list"},d.a.createElement("tbody",null,E.map((function(e){var t=e.Component;return d.a.createElement(t,Object.assign({key:Xt.a.uniqueId()},e))})),S&&d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2,className:"updated"},d.a.createElement(M.a,{id:"last-updated",defaultMessage:"Last updated"},(function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];return t+" "})),le()(S).format("HH:mm:ss")||"")),d.a.createElement("tr",null,d.a.createElement("td",{colSpan:2},d.a.createElement("div",{"aria-hidden":"true",className:"text-button",onClick:function(){return n()}},"< "+s.formatMessage({id:"back",defaultMessage:"Go back"}))))))))};ra.displayName="CityWeatherStationContentList",ra.description=d.a.createElement("div",null,d.a.createElement("p",null,"RendTimeers content of a roadwork popup or modal"),d.a.createElement(de.a,{description:""},d.a.createElement(ra,{comment:ce.d}))),ra.propTypes={station:s.a.object.isRequired,toggleView:s.a.func.isRequired,getWindDirection:s.a.func.isRequired},ra.contextTypes={intl:M.d.isRequired};var oa=O.a.createContainer(Object(Jt.connectToStores)(ra,["PreferencesStore"],(function(e){return{lang:e.getStore("PreferencesStore").getLanguage()}})),{fragments:{station:function(){return{children:[{fieldName:"weatherStationId",kind:"Field",metadata:{},type:"String"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"lon",kind:"Field",metadata:{},type:"Float"},{fieldName:"lat",kind:"Field",metadata:{},type:"Float"},{children:[{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"sensorValue",kind:"Field",metadata:{},type:"Float"},{fieldName:"sensorUnit",kind:"Field",metadata:{},type:"String"},{fieldName:"measuredTime",kind:"Field",metadata:{},type:"GraphQLDateTime"}],fieldName:"sensorValues",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"CityWeatherStationSensorValue"},{children:[{fieldName:"cameraId",kind:"Field",metadata:{},type:"Int"},{fieldName:"imageUrl",kind:"Field",metadata:{},type:"String"}],fieldName:"cameras",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"CityWeatherStationCamera"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:O.a.QL.__id(),kind:"Fragment",metadata:{},name:"CityWeatherStationContentList_StationRelayQL",type:"CityWeatherStation"}}}}),sa=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t}(O.a.Route);sa.queries={station:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"cityWeatherStation",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"CityWeatherStationRoute",type:"CityWeatherStation"}}},sa.paramDefinitions={id:{required:!0}},sa.routeName="CityWeatherStationRoute";var la=function(e){function t(t){var a;return(a=e.call(this,t)||this).getWindDirection=function(e){var t=["north","northeast","east","southeast","south","southwest","west","northwest"];return t[Math.round(e/45)%t.length]},a.toggleView=function(){a.setState({showList:!a.state.showList})},a.toggleImageView=function(e){a.setState({showImageView:!a.state.showImageView,cameraInfo:e})},a.state={showList:!1,showImageView:!1,cameraInfo:null},a}return Object(r.a)(t,e),t.prototype.render=function(){var e=this,t=this.props.id,a=this.context.intl,i=this.state,n=i.showList,r=i.showImageView,o=i.cameraInfo,s=new sa({id:t});return d.a.createElement(O.a.Renderer,{Container:n?oa:aa,queryConfig:s,environment:O.a.Store,render:function(t){var i=t.done,s=t.error,l=t.props;return i?r&&o?d.a.createElement(da,{cameraInfo:o,toggleImageView:e.toggleImageView}):n?d.a.createElement(oa,Object.assign({toggleView:e.toggleView,getWindDirection:e.getWindDirection},l)):d.a.createElement(aa,Object.assign({getWindDirection:e.getWindDirection,toggleImageView:e.toggleImageView,toggleView:e.toggleView},l)):i?s?d.a.createElement(ca,l,a.formatMessage({id:"generic-error",defaultMessage:"There was an error"})):null:d.a.createElement(ca,l,d.a.createElement("div",{className:"spinner-loader"}))}})},t}(d.a.Component);la.description=d.a.createElement("div",null,d.a.createElement("p",null,"Renders a city weather station popup."),d.a.createElement(de.a,{description:""})),la.propTypes={id:s.a.string.isRequired},la.contextTypes={config:s.a.object,intl:M.d.isRequired,router:A.routerShape.isRequired,location:A.locationShape.isRequired},la.displayName="CityWeatherStationPopup";var da=function(e,t){var a=e.cameraInfo,i=e.toggleImageView,n=t.intl;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:n.formatMessage({id:"weather-station",defaultMessage:"City weather station"}),description:a.localName,icon:"icon-icon_camera-station"}),Object(D.a)(a.cameras)?d.a.createElement("div",{className:"card-empty"},d.a.createElement(M.a,{id:"traffic-camera-no-recent-images",defaultMessage:"No recent images"})):d.a.createElement(Ye,null,a.cameras.map((function(e){return d.a.createElement("figure",{className:"slide",key:e.cameraId},d.a.createElement("figcaption",null,a.localName),d.a.createElement("img",{src:e.imageUrl,alt:a.localName,onClick:function(){window.open(e.imageUrl,"_blank")}}))}))),d.a.createElement("br",null),d.a.createElement("div",{"aria-hidden":"true",className:"text-button",onClick:function(){return i(null)}},"< "+n.formatMessage({id:"back",defaultMessage:"Go back"}))))};da.propTypes={cameraInfo:o.object.isRequired,toggleImageView:o.func.isRequired},da.contextTypes={intl:M.d.isRequired};var ca=function(e,t){var a=e.children,i=t.intl;return d.a.createElement("div",{className:"card"},d.a.createElement(re.a,{className:"padding-small"},d.a.createElement(oe.a,{name:i.formatMessage({id:"weather-station",defaultMessage:"City weather station"}),description:"",icon:"icon-icon_weather-station",unlinked:!0}),d.a.createElement("div",{className:"information-container"},a)))};ca.propTypes={children:o.object.isRequired},ca.contextTypes={intl:M.d.isRequired};var ma=la,ua={selectableTargets:void 0,coords:void 0,showSpinner:!0},pa=function(e){function t(t,a){var i;return(i=e.call(this,t,a)||this).onTimeChange=function(e){e.currentTime&&(i.setState({currentTime:e.currentTime.unix(),showSpinner:!1}),Object(P.a)(i.leafletElement._tiles,(function(e){return e.active})).forEach((function(e){return e.el.layers&&e.el.layers.forEach((function(e){e.onTimeChange&&e.onTimeChange()}))})))},i.onClick=function(e){Object.keys(i.leafletElement._tiles).filter((function(e){return i.leafletElement._tiles[e].active})).filter((function(t){return i.leafletElement._keyToBounds(t).contains(e.latlng)})).forEach((function(t){return i.leafletElement._tiles[t].el.onMapClick(e,i.merc.px([e.latlng.lng,e.latlng.lat],Number(t.split(":")[2])+i.props.zoomOffset))}))},i.onPopupclose=function(){return i.setState(ua)},i.PopupOptions={offset:[110,16],minWidth:320,maxWidth:320,autoPanPaddingTopLeft:[5,125],className:"popup",ref:"popup",onClose:i.onPopupclose,autoPan:!1},i.merc=new L.a({size:i.props.tileSize||256}),i.createTile=function(e,t){return i.createTileExt(e,t,i.props)},i.createTileAlt=function(e,t){var a=Object(x.a)({},i.props);return a.layers=a.layers.filter((function(e){return["Stops","Fluencies"].includes(e.name)})),i.createTileExt(e,t,Object(x.a)({},a,{isHighlight:!0}))},i.createTileExt=function(e,t,a){var n=new Mt(e,t,a,i.context.config,i.context.location,i.props.leaflet.map);return n.onSelectableTargetClicked=function(e,t){e&&i.props.disableMapTracking&&i.props.disableMapTracking();var a=e.filter((function(e){return Object(Ot.a)(e.feature,e.layer,i.props.mapLayers,i.context.config)})),n=(a=(a=(a=(a=Object(V.a)(a,(function(e){return[Object(z.a)(e,"feature.properties.id")||Object(z.a)(e,"feature.properties.code"),Object(z.a)(e,"feature.properties.trafficDirection"),Object(z.a)(e,"layer")].join("_")}))).filter((function(e){var t=Object(z.a)(e,"layer"),a=Object(z.a)(e,"feature.properties.jobId");return"maintenanceVehicles"!==t||0!==a}))).filter((function(e){var t=Object(z.a)(e,"layer"),a=Object(z.a)(e,"feature.properties.jobId");return"roadInspectionVehicles"!==t||0!==a}))).filter((function(e){var t=Object(z.a)(e,"layer"),a=Object(z.a)(e,"feature.properties.type"),i=Object(z.a)(e,"feature.properties.displayValue");return"roadSigns"!==t||"SPEEDLIMIT"===a&&"null"!==i&&!!i||"WARNING"===a&&"null"!==i&&!!i||"INFORMATION"===a}))).reduce((function(e,t){var a,i=Object(z.a)(t,"layer"),n=Object(z.a)(t,"feature.dist"),r=Object(z.a)(e,i+".feature.dist");return n&&(!r||n<r)?Object(x.a)({},e,((a={})[i]=t,a)):e}),{}),r=n.maintenanceVehicles;if(r){var o=Object(z.a)(r,"feature.dist"),s=a.filter((function(e){return"maintenanceVehicles"===e.layer&&Object(z.a)(e,"feature.dist")-o<1})).sort((function(e,t){return Object(z.a)(t,"feature.properties.timestamp")-Object(z.a)(e,"feature.properties.timestamp")}));s.length>0&&(n=Object(x.a)({},n,{maintenanceVehicles:Object(x.a)({},s[0])}))}a=a.filter((function(e){return!n[e.layer]||n[e.layer].feature.properties.id===e.feature.properties.id&&n[e.layer].feature.dist===e.feature.dist})),i.setState({selectableTargets:a,coords:t,showSpinner:!0})},n.el},i.selectRow=function(e){return i.setState({selectableTargets:e,showSpinner:!0})},i.isAllSameLayers=function(e){return 0===i.state.selectableTargets.filter((function(t){return t.layer!==e})).length},i.renderLoadingPopup=function(){return d.a.createElement("div",{className:"card",style:{height:"12rem"}},d.a.createElement(St.a,null))},i.renderLocationPopup=function(){var e=i.state.coords;return d.a.createElement(B.default,Object.assign({key:e.toString()},i.PopupOptions,{maxHeight:220,position:e}),d.a.createElement(Rt,{name:"",lat:e.lat,lon:e.lng}))},i.renderMarkerSelectPopup=function(){var e=i.state,t=e.selectableTargets,a=e.coords;return d.a.createElement(B.default,Object.assign({key:a.toString()},i.PopupOptions,{maxHeight:220,position:a}),d.a.createElement(ie.a,{selectRow:i.selectRow,options:t}))},i.context=a,i.state=Object(x.a)({},ua,{currentTime:a.getStore("TimeStore").getCurrentTime().unix()}),i.leafletElement.createTile=i.createTile,i}Object(r.a)(t,e);var a=t.prototype;return a.componentDidMount=function(){e.prototype.componentDidMount.call(this),this.context.getStore("TimeStore").addChangeListener(this.onTimeChange),this.props.leaflet.map.addEventParent(this.leafletElement),this.leafletElement.on("click contextmenu",this.onClick)},a.componentDidUpdate=function(e){null!=this.context.popupContainer&&this.context.popupContainer.openPopup(),Object(q.a)(e.mapLayers,this.props.mapLayers)&&Object(q.a)(e.mapLayerOptions,this.props.mapLayerOptions)&&Object(q.a)(e.hilightedStops,this.props.hilightedStops)&&Object(q.a)(e.maintenanceVehicleTail,this.props.maintenanceVehicleTail)||(this.props.leaflet.map.removeEventParent(this.leafletElement),this.leafletElement.remove(),this.leafletElement=this.createLeafletElement(this.props),this.props.leaflet.map.addLayer(this.leafletElement),this.leafletElementHighlighted&&this.leafletElementHighlighted.remove()),Object(q.a)(e.highlightedStop,this.props.highlightedStop)&&Object(q.a)(e.highlightedFluency,this.props.highlightedFluency)||(this.leafletElementHighlighted&&this.leafletElementHighlighted.remove(),(this.props.highlightedStop||this.props.highlightedFluency)&&(this.leafletElementHighlighted=this.createLeafletElement(this.props,!1),this.props.leaflet.map.addLayer(this.leafletElementHighlighted)))},a.componentWillUnmount=function(){this.context.getStore("TimeStore").removeChangeListener(this.onTimeChange),this.leafletElement.off("click contextmenu",this.onClick)},a.createLeafletElement=function(e,t){void 0===t&&(t=!0);var a=new(b.a.GridLayer.extend({createTile:t?this.createTile:this.createTileAlt}))(this.getOptions(e));return t&&(this.props.leaflet.map.addEventParent(a),a.on("click contextmenu",this.onClick)),a},a.render=function(){var e,t,a=this,i=this.state,n=i.selectableTargets,r=i.coords,o=i.showSpinner;if(Object(D.a)(n)&&!r)return null;if(Object(D.a)(n))return this.renderLocationPopup();if(n.length>1)return this.renderMarkerSelectPopup();var s=Object(x.a)({},this.PopupOptions),l=n[0];switch(l.layer){case"ecoCounters":s.maxWidth=420,s.minWidth=420,t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(Pt.a,{domain:Object(z.a)(l,"feature.properties.domain"),name:Object(z.a)(l,"feature.properties.name"),channels:JSON.parse(Object(z.a)(l,"feature.properties.channels","[]"))});break;case"stop":t=Object(z.a)(l,"feature.properties.gtfsId"),e=d.a.createElement(O.a.RootContainer,{Component:ae.a,route:l.feature.properties.stops?new G({terminalId:t,currentTime:this.state.currentTime}):new W.a({stopId:t,currentTime:this.state.currentTime}),renderLoading:o?this.renderLoadingPopup:void 0,renderFetched:function(e){return d.a.createElement(ae.a,e)}});break;case"citybike":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:ne.a,forceFetch:!0,route:new H.a({stationId:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(ne.a,e)}});break;case"parkingStations":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:Fe,forceFetch:!0,route:new Q({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(Fe,e)}});break;case"parkAndRide":(t=Object(z.a)(l,"feature.properties.facilityIds"))?e=d.a.createElement(O.a.RootContainer,{Component:De,forceFetch:!0,route:new Ve({stationIds:JSON.parse(t)}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(De,Object.assign({name:JSON.parse(a.state.selectableTargets[0].feature.properties.name)[a.context.intl.locale],lat:a.state.coords.lat,lon:a.state.coords.lng},e))}}):(t=Object(z.a)(l,"feature.id"),e=d.a.createElement(O.a.RootContainer,{Component:qe,forceFetch:!0,route:new ze({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(qe,Object.assign({name:JSON.parse(a.state.selectableTargets[0].feature.properties.name)[a.context.intl.locale],lat:a.state.coords.lat,lon:a.state.coords.lng},e))}}));break;case"cityWeatherStations":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(ma,{id:t});break;case"weatherStations":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:fe,forceFetch:!0,route:new X({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(fe,e)}});break;case"tmsStations":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:be,forceFetch:!0,route:new $({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(be,e)}});break;case"ticketSales":t=Object(z.a)(l,"feature.properties.FID"),e=d.a.createElement(Ue.a,this.state.selectableTargets[0].feature.properties);break;case"cameraStations":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:Je,forceFetch:!0,route:new Z({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(Je,e)}});break;case"roadworks":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:tt,forceFetch:!0,route:new Y({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(tt,e)}});break;case"disorders":t=Object(z.a)(l,"feature.properties.id"),e="TrafficAnnouncement"===Object(z.a)(l,"feature.properties.type")?d.a.createElement(O.a.RootContainer,{Component:ct,forceFetch:!0,route:new J({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(ct,e)}}):d.a.createElement(O.a.RootContainer,{Component:rt,forceFetch:!0,route:new K({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(rt,e)}});break;case"roadConditions":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:gt,forceFetch:!0,route:new ee({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(gt,e)}});break;case"roadInspectionVehicles":case"maintenanceVehicles":s.maxWidth=360,t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:bt,forceFetch:!0,route:new te({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(bt,e)}});break;case"fluencies":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(Qe,l.feature.properties);break;case"roadSigns":t=Object(z.a)(l,"feature.properties.id"),e=d.a.createElement(O.a.RootContainer,{Component:Bt,forceFetch:!0,route:new Wt({id:t}),renderLoading:this.renderLoadingPopup,renderFetched:function(e){return d.a.createElement(Bt,e)}});break;case"bicycleRoutesBaana":case"bicycleRoutesBrand":case"bicycleRoutesMainRegional":case"bicycleRouteTypes":e=d.a.createElement(Kt,Object.assign({layer:l.layer},l.feature.properties))}return e?d.a.createElement(B.default,Object.assign({},s,{key:t,position:this.state.coords}),e):this.renderLocationPopup()},t}(I.a);pa.propTypes={tileSize:s.a.number.isRequired,zoomOffset:s.a.number.isRequired,disableMapTracking:s.a.func,mapLayers:It.b.isRequired,mapLayerOptions:_t.b.isRequired,highlightedStop:s.a.string,highlightedFluency:s.a.string,maintenanceVehicleTail:Lt.b.isRequired,leaflet:s.a.shape({map:s.a.shape({addLayer:s.a.func.isRequired,addEventParent:s.a.func.isRequired,removeEventParent:s.a.func.isRequired}).isRequired}).isRequired},pa.defaultProps={highlightedStop:null,highlightedFluency:null},pa.contextTypes={getStore:s.a.func.isRequired,intl:M.d.isRequired,config:s.a.object.isRequired,location:A.locationShape.isRequired};var fa=Object(U.b)(E()(pa,[It.a,_t.a,Lt.a],(function(e){return{mapLayers:e.getStore(It.a).getMapLayers(),mapLayerOptions:e.getStore(_t.a).getMapLayerOptions(),highlightedStop:e.getStore(It.a).getHighlightedStop(),highlightedFluency:e.getStore(It.a).getHighlightedFluency(),maintenanceVehicleTail:e.getStore(Lt.a).getTail(),location:e.location}}))),ga=a("./node_modules/@mapbox/vector-tile/index.js"),ha=a("./node_modules/pbf/index.js"),ya=a("./node_modules/lodash-es/pick.js"),ba=a("./app/util/glfun.js"),va=a("./app/util/citybikes.js"),Ea=Object(ba.a)({base:1,stops:[[13,.8],[20,1.6]]}),Sa={},ka=function(e,t){var a=this;this.fetchWithAction=function(e){return fetch(a.config.URL.CITYBIKE_MAP+(a.tile.coords.z+(a.tile.props.zoomOffset||0)+"/")+a.tile.coords.x+"/"+a.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.arrayBuffer().then((function(t){var i=new ga.a(new ha.a(t));if(a.features=[],null!=i.layers.bicyclestations)for(var n=0,r=i.layers.bicyclestations.length-1;n<=r;n++){var o=i.layers.bicyclestations.feature(n),s=o.loadGeometry()[0];o.geom=s[0],a.features.push(Object(ya.a)(o,["geom","properties"]))}a.features.forEach(e)}),(function(e){return console.log(e)}))}))},this.fetchAndDrawStatus=function(e){var t=e.geom,i=e.properties.id,n=O.a.createQuery({calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"bikesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"state",kind:"Field",metadata:{},type:"String"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"bikeRentalStation",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"CityBikes",type:"BikeRentalStation"},{id:i}),r=Sa[i],o=(new Date).getTime(),s=function(e){if(e.done){Sa[i]=(new Date).getTime();var r=O.a.Store.readQuery(n)[0];if(r){var o;if(a.tile.coords.z<=a.config.cityBike.cityBikeSmallIconZoom)return o=r.state!==va.c?"citybike-off":"citybike",Object(zt.w)(a.tile,t,o);if(r.state===va.a)return Object(zt.f)(a.tile,t,a.citybikeImageSize);if(r.state===va.b)return Object(zt.f)(a.tile,t,a.citybikeImageSize).then((function(){return Object(zt.a)("no",a.tile,t,a.citybikeImageSize,a.availabilityImageSize,a.scaleratio)}));if(r.state===va.c)return Object(zt.e)(a.tile,t,a.citybikeImageSize).then((function(){0===r.bikesAvailable?Object(zt.a)("no",a.tile,t,a.citybikeImageSize,a.availabilityImageSize,a.scaleratio):Object(zt.b)(a.tile,t,r.bikesAvailable,a.citybikeImageSize,a.availabilityImageSize,a.scaleratio)}))}}return a};r&&o-r<=3e4?O.a.Store.primeCache({query:n},s):O.a.Store.forceFetch({query:n},s)},this.onTimeChange=function(){a.tile.coords.z>a.config.cityBike.cityBikeSmallIconZoom&&a.fetchWithAction(a.fetchAndDrawStatus)},this.tile=e,this.config=t,this.scaleratio=R.c&&window.devicePixelRatio||1,this.citybikeImageSize=20*this.scaleratio*Ea(this.tile.coords.z),this.availabilityImageSize=14*this.scaleratio*Ea(this.tile.coords.z),this.promise=this.fetchWithAction(this.fetchAndDrawStatus)};ka.getName=function(){return"citybike"};var Na=ka,Ra=function(){function e(e,t,a){this.tile=e,this.config=t,this.mapLayers=a,this.promise=this.getPromise()}var t=e.prototype;return t.drawStop=function(t){Object(Ot.a)(t,e.getName(),this.mapLayers,this.config)&&("FERRY"!==t.properties.type?Object(zt.w)(this.tile,t.geom,t.properties.type,this.tile.props.isHighlight&&this.tile.props.highlightedStop&&this.tile.props.highlightedStop===t.properties.gtfsId||this.tile.props.hilightedStops&&this.tile.props.hilightedStops.includes(t.properties.gtfsId),"null"!==t.properties.platform&&t.properties.platform):Object(zt.y)(this.tile,t.geom,t.properties.type,this.tile.coords.z>=this.config.terminalNamesZoom&&t.properties.name))},t.getPromise=function(){var e=this,t=""+this.config.URL.STOP_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf";return fetch(Object(kt.a)(this.config,t)).then((function(t){if(200===t.status)return t.arrayBuffer().then((function(t){var a=new ga.a(new ha.a(t));if(e.features=[],null!=a.layers.stops&&e.tile.coords.z>=e.config.stopsMinZoom)for(var i=0,n=a.layers.stops.length-1;i<=n;i++){var r=a.layers.stops.feature(i);if((!e.tile.props.isHighlight||e.tile.props.highlightedStop&&e.tile.props.highlightedStop===r.properties.gtfsId)&&(r.properties.type&&(!r.properties.parentStation||e.config.terminalStopsMaxZoom-1<=e.tile.coords.z+(e.tile.props.zoomOffset||0)))){var o=r.loadGeometry()[0];r.geom=o[0],e.features.push(Object(ya.a)(r,["geom","properties"])),e.drawStop(r)}}if(null!=a.layers.stations&&e.config.terminalStopsMaxZoom>e.tile.coords.z+(e.tile.props.zoomOffset||0)&&e.tile.coords.z>=e.config.terminalStopsMinZoom)for(var s=0,l=a.layers.stations.length-1;s<=l;s++){var d=a.layers.stations.feature(s);if(d.properties.type&&Object(Ot.a)(d,"terminal",e.mapLayers,e.config)){var c=d.loadGeometry()[0];d.geom=c[0],e.features.unshift(Object(ya.a)(d,["geom","properties"])),Object(zt.y)(e.tile,d.geom,d.properties.type,e.tile.coords.z>=e.config.terminalNamesZoom&&d.properties.name)}}}),(function(e){return console.log(e)}))}))},e}();Ra.getName=function(){return"stop"};var ja=Ra,wa=a("./app/util/geo-utils.js"),Ta=function(){function e(e,t){this.tile=e,this.config=t;var a=R.c&&window.devicePixelRatio||1;this.width=24*a,this.height=12*a,this.promise=this.getPromise()}return e.prototype.getPromise=function(){var e=this;return fetch(""+this.config.URL.PARK_AND_RIDE_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.arrayBuffer().then((function(t){var a=new ga.a(new ha.a(t));if(e.features=[],e.tile.coords.z<17&&null!=a.layers.hubs)for(var i=function(){var t=a.layers.hubs.feature(n),i=O.a.createQuery({calls:[{kind:"Call",metadata:{type:"[String]"},name:"ids",value:{kind:"CallVariable",callVariableName:"ids"}}],children:[{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"maxCapacity",kind:"Field",metadata:{},type:"Int"},{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"realtime",kind:"Field",metadata:{},type:"Boolean"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"carParks",kind:"Query",metadata:{isPlural:!0,identifyingArgName:"ids",identifyingArgType:"[String]"},name:"ParkAndRide",type:"CarPark"},{ids:JSON.parse(t.properties.facilityIds)});O.a.Store.primeCache({query:i},(function(a){if(a.done){var n=Object(Me.a)(O.a.Store.readQuery(i));if(!Object(D.a)(n)){t.properties.facilities=n;var r=t.loadGeometry()[0];t.geom=r[0],e.features.push(Object(ya.a)(t,["geom","properties"])),Object(zt.q)(e.tile,t.geom,e.width,e.height)}}}))},n=0,r=a.layers.hubs.length-1;n<=r;n++)i();else if(e.tile.coords.z>=17&&null!=a.layers.facilities)for(var o=function(){var t=a.layers.facilities.feature(s),i=O.a.createQuery({calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"maxCapacity",kind:"Field",metadata:{},type:"Int"},{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"realtime",kind:"Field",metadata:{},type:"Boolean"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"carPark",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"ParkAndRide",type:"CarPark"},{id:t.id});O.a.Store.primeCache({query:i},(function(a){if(a.done){var n=Object(Me.a)(O.a.Store.readQuery(i));null!=n&&0!==n.length&&(t.properties.facility=n,t.geom=new wa.a(t.loadGeometry()[0]).centroid(),e.features.push(t),Object(zt.q)(e.tile,t.geom,e.width,e.height))}}))},s=0,l=a.layers.facilities.length-1;s<=l;s++)o()}),(function(e){return console.log(e)}))}))},e}();Ta.getName=function(){return"parkAndRide"};var Ca=function(){function e(e,t,a){this.tile=e,this.config=t,this.mapLayers=a,this.scaleratio="undefined"!=typeof window&&window.devicePixelRatio||1,this.promise=this.getPromise()}return e.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.TICKET_SALES_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(a){if(200===a.status)return a.arrayBuffer().then((function(a){var i=new ga.a(new ha.a(a));t.features=[];var n=2.5*Object(zt.F)(t.tile.coords.z)*t.scaleratio;if(null!=i.layers["ticket-sales"])for(var r=0,o=i.layers["ticket-sales"].length-1;r<=o;r++){var s=i.layers["ticket-sales"].feature(r);if(Object(Ot.a)(s,e.getName(),t.mapLayers,t.config)){var l=s.loadGeometry()[0];s.geom=l[0];var d=e.getIcon(s.properties.TYYPPI);d&&(t.features.push(Object(ya.a)(s,["geom","properties"])),Object(zt.m)(d,t.tile,s.geom,n))}}}),(function(e){return console.log(e)}))}))},e}();Ca.getName=function(){return"ticketSales"},Ca.getIcon=function(e){switch(e){case"Palvelupiste":return"icon-icon_service-point";case"HSL Automaatti MNL":case"HSL Automaatti KL":return"icon-icon_ticket-machine";case"Myyntipiste":case"R-kioski":return"icon-icon_ticket-sales-point";default:return}};var xa=a("./app/component/map/tile-layer/ParkingStations.js"),Fa=a("./app/component/map/tile-layer/CameraStations.js"),Oa=a("./app/component/map/tile-layer/Roadworks.js"),Aa=a("./app/component/map/tile-layer/Disorders.js"),Ma=a("./app/component/map/tile-layer/WeatherStations.js"),Ia=a("./app/component/map/tile-layer/TmsStations.js"),_a=a("./app/component/map/tile-layer/RoadConditions.js"),La=a("./app/component/map/tile-layer/MaintenanceVehicleRoutes.js"),Pa=function(e,t){var a=this;this.getPromise=function(){return new Promise((function(e){a.drawTail(),e()}))},this.drawTail=function(){var e=a.tile,t=e.coords,i=e.tileSize,n=e.scaleratio,r=e.map,o=new b.a.Point(i/n,i/n),s=t.scaleBy(o),l=t.scaleBy(o).add(o),d=r.unproject(s,t.z),c=r.unproject(l),m=new b.a.LatLngBounds(d,c),u=[],p=null;a.tile.props.maintenanceVehicleTail.forEach((function(e){var t=new b.a.LatLng(e.lat,e.long),i=e.jobIds;if(p=i[0],m.contains(t)){var n=function(e,t,a){var i=a.map,n=a.coords,r=a.tileSize,o=a.scaleratio,s=new b.a.Point(r/o,r/o);return i.project(new b.a.LatLng(e,t),n.z).unscaleBy(s).subtract(n).scaleBy(s).multiplyBy(o)}(e.lat,e.long,a.tile);u.push(n)}})),u.length&&Object(zt.p)(a.tile,u,ht.h[p])},this.tile=e,this.config=t,this.promise=this.getPromise()};Pa.getName=function(){return"realtimeMaintenanceVehicles"};var Da=Pa,qa=a("./app/component/map/tile-layer/Fluencies.js"),Va=a("./app/component/map/tile-layer/EcoCounters.js"),za=a("./app/component/map/tile-layer/RoadSigns.js"),Ua=a("./app/component/map/tile-layer/BicycleRoutes.js"),Ba=a("./app/component/map/tile-layer/CityWeatherStations.js"),Wa=function(e){function t(t,a){var i;return(i=e.call(this,t,a)||this).state={},i}return Object(r.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.showStops,a=e.hilightedStops,i=e.disableMapTracking,n=this.context.config,r=[];return t&&(n.roadConditions&&n.roadConditions.showRoadConditions&&r.push(_a.a),n.maintenanceVehicles&&n.maintenanceVehicles.showMaintenanceVehicles&&r.push(La.b),n.realtimeMaintenanceVehicles&&n.realtimeMaintenanceVehicles.showRealtimeMaintenanceVehicles&&r.push(Da),n.roadInspectionVehicles&&n.roadInspectionVehicles.showRoadInspectionVehicles&&r.push(La.a),n.fluencies&&n.fluencies.showFluencies&&r.push(qa.a),r.push(ja),n.cityBike&&n.cityBike.showCityBikes&&r.push(Na),n.parkAndRide&&n.parkAndRide.showParkAndRide&&r.push(Ta),n.ticketSales&&n.ticketSales.showTicketSales&&r.push(Ca),n.parkingStations&&n.parkingStations.showParkingStations&&r.push(xa.a),n.cameraStations&&n.cameraStations.showCameraStations&&r.push(Fa.a),n.weatherStations&&n.weatherStations.showWeatherStations&&r.push(Ma.a),n.cityWeatherStations&&n.cityWeatherStations.showCityWeatherStations&&r.push(Ba.a),n.tmsStations&&n.tmsStations.showTmsStations&&r.push(Ia.a),n.roadworks&&n.roadworks.showRoadworks&&r.push(Oa.a),n.disorders&&n.disorders.showDisorders&&r.push(Aa.a),n.ecoCounters&&n.ecoCounters.showEcoCounters&&r.push(Va.a),n.roadSigns&&n.roadSigns.showRoadSigns&&r.push(za.a),n.bicycleRoutes&&n.bicycleRoutes.showBicycleRoutes&&(r.push(Ua.c),r.push(Ua.a),r.push(Ua.b))),d.a.createElement(fa,{key:"tileLayer",layers:r,hilightedStops:a,tileSize:n.map.tileSize||256,zoomOffset:n.map.zoomOffset||0,disableMapTracking:i})},t}(d.a.Component);Wa.propTypes={hilightedStops:s.a.arrayOf(s.a.string.isRequired),disableMapTracking:s.a.func,showStops:s.a.bool},Wa.contextTypes={config:s.a.object.isRequired};var Ga=Wa,Ha=a("./app/util/withBreakpoint.js"),Qa=a("./app/util/events.js"),Za=function(e){function t(){for(var t,a=arguments.length,i=new Array(a),n=0;n<a;n++)i[n]=arguments[n];return(t=e.call.apply(e,[this].concat(i))||this).onPopupopen=function(){return Qa.a.emit("popupOpened")},t.setLoaded=function(){t.props.loaded()},t.resizeMap=function(){t.map&&(t.map.leafletElement.invalidateSize(!1),t.props.fitBounds&&t.map.leafletElement.fitBounds(Object(wa.b)(t.props.bounds),t.props.boundsOptions))},t}Object(r.a)(t,e);var a=t.prototype;return a.componentDidMount=function(){this.erd=m()({strategy:"scroll"}),this.erd.listenTo(this.map.leafletElement._container,this.resizeMap)},a.componentWillUnmount=function(){this.erd.removeListener(this.map.leafletElement._container,this.resizeMap)},a.render=function(){var e=this,t=this.props,a=t.zoom,i=t.boundsOptions,n=this.context.config,r=!this.props.fitBounds&&this.props.lat&&this.props.lon&&[this.props.lat,this.props.lon]||null;this.props.padding&&(i.paddingTopLeft=this.props.padding);var o=R.d&&n.URL.OTP+"inspector/tile/traversal/"||n.URL.MAP;return null!==o&&"object"==typeof o&&(o=o[this.props.lang]||n.URL.MAP.default),d.a.createElement(u.a,Object.assign({keyboard:!1,ref:function(t){e.map=t,e.props.mapRef&&e.props.mapRef(t),t&&e.props.activeArea&&t.leafletElement.setActiveArea(e.props.activeArea)},center:r,zoom:a,minZoom:n.map.minZoom,maxZoom:n.map.maxZoom,zoomControl:!1,attributionControl:!1,bounds:this.props.fitBounds&&Object(wa.b)(this.props.bounds)||void 0,animate:this.props.animate},this.props.leafletOptions,{boundsOptions:i},this.props.leafletEvents,{onPopupopen:this.onPopupopen}),d.a.createElement(p.a,{onLoad:this.setLoaded,url:Object(kt.a)(n,o+"{z}/{x}/{y}{size}.png"),tileSize:n.map.tileSize||256,zoomOffset:n.map.zoomOffset||0,updateWhenIdle:!1,size:n.map.useRetinaTiles&&b.a.Browser.retina&&!R.d?"@2x":"",minZoom:n.map.minZoom,maxZoom:n.map.maxZoom}),d.a.createElement(f.a,{position:"bottomright",prefix:'Â© <a tabindex="-1" href="http://osm.org/copyright">OpenStreetMap</a>'}),this.props.showScaleBar&&d.a.createElement(g.a,{imperial:!1,position:n.map.controls.scale.position}),d.a.createElement(Ha.a,null,(function(t){return"large"===t&&!e.props.disableZoom&&d.a.createElement(h.a,{position:n.map.controls.zoom.position,zoomInText:'<svg class="icon"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#icon-icon_plus"/></svg>',zoomOutText:'<svg class="icon"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#icon-icon_minus"/></svg>'})})),this.props.leafletObjs,d.a.createElement(Ga,{hilightedStops:this.props.hilightedStops,showStops:this.props.showStops,disableMapTracking:this.props.disableMapTracking}),d.a.createElement(C,{key:"position"}))},t}(d.a.Component);Za.propTypes={animate:s.a.bool,bounds:s.a.array,boundsOptions:s.a.object,center:s.a.bool,disableMapTracking:s.a.func,fitBounds:s.a.bool,hilightedStops:s.a.array,lang:s.a.string.isRequired,lat:s.a.number,lon:s.a.number,leafletEvents:s.a.object,leafletObjs:s.a.array,leafletOptions:s.a.object,padding:s.a.array,showStops:s.a.bool,zoom:s.a.number,showScaleBar:s.a.bool,loaded:s.a.func,disableZoom:s.a.bool,activeArea:s.a.string,mapRef:s.a.func},Za.defaultProps={animate:!0,loaded:function(){},showScaleBar:!1,activeArea:null,mapRef:null},Za.contextTypes={executeAction:s.a.func.isRequired,piwik:s.a.object,config:s.a.object.isRequired}},"./app/component/map/PlaceMarker.js":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return c}));var i,n=a("./node_modules/prop-types/index.js"),r=a.n(n),o=a("./node_modules/react/index.js"),s=a.n(o),l=a("./node_modules/react-intl/lib/index.es.js"),d=a("./app/component/Icon.js");function c(e){var t=e.position;return s.a.createElement("div",null,s.a.createElement(i,{zIndexOffset:10,position:t,keyboard:!1,icon:{element:s.a.createElement(d.a,{img:"icon-icon_mapMarker-point"}),className:"place halo",iconAnchor:[12,24]}}),s.a.createElement(i,{keyboard:!1,zIndexOffset:10,position:t,icon:{element:s.a.createElement(d.a,{img:"icon-icon_place"}),className:"place",iconAnchor:[12,24]}}))}a("./app/util/browser.js").c&&(i=a("./app/component/map/IconMarker.js").default),c.contextTypes={intl:l.d.isRequired},c.propTypes={position:r.a.shape({lat:r.a.number.isRequired,lon:r.a.number.isRequired}).isRequired}},"./app/component/map/popups/CityBikePopup.js":function(e,t,a){"use strict";var i=a("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),n=a("./node_modules/prop-types/index.js"),r=a.n(n),o=a("./node_modules/react/index.js"),s=a.n(o),l=a("./node_modules/react-relay/classic.js"),d=a.n(l),c=a("./app/component/map/MarkerPopupBottom.js"),m=a("./app/component/CityBikeContent.js"),u=a("./node_modules/fluxible-addons-react/connectToStores.js"),p=a.n(u),f=a("./app/component/CityBikeCard.js"),g=a("./app/action/FavouriteActions.js"),h=p()(f.a,["FavouriteCityBikeStationStore"],(function(e,t){return{isFavourite:e.getStore("FavouriteCityBikeStationStore").isFavourite(t.station.stationId),toggleFavourite:function(a){a.preventDefault(),e.executeAction(g.f,t.station.stationId)}}}));h.propTypes={station:r.a.object.isRequired,className:r.a.string,children:r.a.node},h.contextTypes={executeAction:r.a.func.isRequired,getStore:r.a.func.isRequired};var y,b=h,v=a("./app/component/ExampleData.js"),E=a("./app/component/ComponentUsageExample.js"),S=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return s.a.createElement("div",{className:"card"},s.a.createElement(b,{className:"padding-small",station:this.props.station},s.a.createElement(m.a,{lang:this.context.getStore("PreferencesStore").getLanguage(),station:this.props.station})),s.a.createElement(c.a,{location:{address:this.props.station.name,lat:this.props.station.lat,lon:this.props.station.lon}}))},t}(s.a.Component);y=S,S.contextTypes={getStore:r.a.func.isRequired},S.description=s.a.createElement("div",null,s.a.createElement("p",null,"Renders a citybike popup."),s.a.createElement(E.a,{description:""},s.a.createElement(y,{context:"context object here",station:v.k},"Im content of a citybike card"))),S.displayName="CityBikePopup",S.propTypes={station:r.a.object.isRequired};t.a=d.a.createContainer(S,{fragments:{station:function(){return{children:[{fieldName:"stationId",kind:"Field",metadata:{},type:"String"},{fieldName:"name",kind:"Field",metadata:{},type:"String"},{fieldName:"lat",kind:"Field",metadata:{},type:"Float"},{fieldName:"lon",kind:"Field",metadata:{},type:"Float"},{fieldName:"bikesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"state",kind:"Field",metadata:{},type:"String"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],id:d.a.QL.__id(),kind:"Fragment",metadata:{},name:"CityBikePopup_StationRelayQL",type:"BikeRentalStation"}}}})},"./app/component/map/tile-layer/BicycleRoutes.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u})),a.d(t,"c",(function(){return p}));var i=a("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),n=a("./node_modules/@mapbox/vector-tile/index.js"),r=a("./node_modules/pbf/index.js"),o=a("./node_modules/lodash-es/sortBy.js"),s=a("./app/util/mapIconUtils.js"),l=a("./app/util/browser.js"),d=a("./app/constants.js"),c=function(t,a){var i=this;this.getPromise=function(){fetch(""+i.mapURL+(i.tile.coords.z+(i.tile.props.zoomOffset||0))+"/"+i.tile.coords.x+"/"+i.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var t=new n.a(new r.a(e));if(i.features=[],null!=t.layers[i.layerKey]){for(var a=[],l=0,c=t.layers[i.layerKey].length-1;l<=c;l++){var m=t.layers[i.layerKey].feature(l);a.push(m)}for(var u=Object(o.a)(a,"properties.type"),p=function(){var e=u[f],t=e.loadGeometry(),a=d.d[i.typePrefix+"-"+e.properties.type];a&&t.forEach((function(t){i.config.bicycleRoutes&&i.config.bicycleRoutes.showLines&&t.length>1&&(Object(s.c)(i.tile,t,a.color,a.dashed),i.features.push({lineString:t,geom:null,properties:e.properties}))}))},f=0,g=u.length-1;f<=g;f++)p()}}))},this.tile=t,this.config=a;var c=l.c&&window.devicePixelRatio||1;this.imageSize=20*c,this.mapURL=this.config.URL.BICYCLE_ROUTES_BRAND_MAP,this.layerKey="bicycleroutes",this.typePrefix=""};c.getName=function(){return"bicycleRoutes"};var m=function(e){function t(t,a){var i;return(i=e.call(this,t,a)||this).mapURL=i.config.URL.BICYCLE_ROUTES_BAANA_MAP,i.layerKey="bicycleroutesbaana",i.typePrefix="BAANA",i.promise=i.getPromise(),i}return Object(i.a)(t,e),t}(c);m.getName=function(){return"bicycleRoutesBaana"};var u=function(e){function t(t,a){var i;return(i=e.call(this,t,a)||this).mapURL=i.config.URL.BICYCLE_ROUTES_BRAND_MAP,i.layerKey="bicycleroutesbrand",i.typePrefix="BRAND",i.promise=i.getPromise(),i}return Object(i.a)(t,e),t}(c);u.getName=function(){return"bicycleRoutesBrand"};var p=function(e){function t(t,a){var i;return(i=e.call(this,t,a)||this).mapURL=i.config.URL.BICYCLE_ROUTES_MAIN_REGIONAL_MAP,i.layerKey="bicycleroutesmainregional",i.typePrefix="MAIN_REGIONAL",i.promise=i.getPromise(),i}return Object(i.a)(t,e),t}(c);p.getName=function(){return"bicycleRoutesMainRegional"},(function(e){function t(t,a){var i;return(i=e.call(this,t,a)||this).mapURL=i.config.URL.BICYCLE_ROUTE_TYPES_MAP,i.layerKey="bicycleroutetypes",i.typePrefix="TYPES",i.promise=i.getPromise(),i}return Object(i.a)(t,e),t}(c)).getName=function(){return"bicycleRouteTypes"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/CameraStations.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return l}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/lodash-es/pick.js"),r=a("./node_modules/pbf/index.js"),o=a("./app/util/mapIconUtils.js"),s=a("./app/util/browser.js"),l=function(){function t(e,t){this.tile=e,this.config=t;var a=s.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.CAMERASTATIONS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new r.a(e));if(t.features=[],null!=a.layers.cameras)for(var s=0,l=a.layers.cameras.length-1;s<=l;s++){var d=a.layers.cameras.feature(s),c=d.loadGeometry()[0];d.geom=c[0],t.features.push(Object(n.a)(d,["geom","properties"])),Object(o.d)(t.tile,d.geom,t.imageSize)}}))},t}();l.getName=function(){return"cameraStations"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/CityWeatherStations.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return l}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/lodash-es/pick.js"),r=a("./node_modules/pbf/index.js"),o=a("./app/util/mapIconUtils.js"),s=a("./app/util/browser.js"),l=function(){function t(e,t){this.tile=e,this.config=t;var a=s.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.CITY_WEATHER_STATIONS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new r.a(e));if(t.features=[],null!=a.layers.cityweatherstations)for(var s=0,l=a.layers.cityweatherstations.length-1;s<=l;s++){var d=a.layers.cityweatherstations.feature(s),c=d.loadGeometry()[0];d.geom=c[0],t.features.push(Object(n.a)(d,["geom","properties"])),Object(o.B)(t.tile,d.geom,t.imageSize)}}))},t}();l.getName=function(){return"cityWeatherStations"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/Disorders.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return h}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/pbf/index.js"),r=a("./node_modules/react-relay/classic.js"),o=a.n(r),s=a("./node_modules/lodash-es/get.js"),l=a("./node_modules/@turf/center-of-mass/dist/esm/index.js"),d=a("./node_modules/@turf/helpers/dist/esm/index.js"),c=a("./node_modules/moment/moment.js"),m=a.n(c),u=a("./app/util/modeUtils.js"),p=a("./app/util/mapIconUtils.js"),f=a("./app/util/browser.js"),g={},h=function(t,a){var r=this;this.getPromise=function(){return fetch(""+r.config.URL.DISORDERS_MAP+(r.tile.coords.z+(r.tile.props.zoomOffset||0))+"/"+r.tile.coords.x+"/"+r.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var t=new i.a(new n.a(e));if(r.features=[],null!=t.layers.disruptions)for(var a=0,o=t.layers.disruptions.length-1;a<=o;a++){var s=t.layers.disruptions.feature(a),l=s.loadGeometry();"TrafficDisorder"!==s.properties.type&&"TrafficAnnouncement"!==s.properties.type||r.fetchItem(l,s)}}))},this.fetchItem=function(e,t){var a=t.properties.id,i="TrafficAnnouncement"===t.properties.type?o.a.createQuery({calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"severity",kind:"Field",metadata:{},type:"TrafficDisruptionSeverity"},{fieldName:"status",kind:"Field",metadata:{},type:"TrafficDisruptionValidityStatus"},{fieldName:"startTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"endTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"modesOfTransport",kind:"Field",metadata:{isPlural:!0},type:"TrafficDisruptionModeOfTransport"},{children:[{fieldName:"class",kind:"Field",metadata:{},type:"String"}],fieldName:"class",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"TrafficDisruptionClass"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"trafficAnnouncement",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"Disorders",type:"TrafficAnnouncement"},{id:a}):o.a.createQuery({calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"severity",kind:"Field",metadata:{},type:"TrafficDisruptionSeverity"},{fieldName:"status",kind:"Field",metadata:{},type:"TrafficDisruptionValidityStatus"},{fieldName:"startTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"endTime",kind:"Field",metadata:{},type:"GraphQLDateTime"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"trafficDisorder",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"Disorders",type:"TrafficDisorder"},{id:a}),n=g[a],s=(new Date).getTime(),l=function(n){if(n.done){g[a]=(new Date).getTime();var s=o.a.Store.readQuery(i)[0];if(s){var l="ACTIVE"===s.status||m()().isBefore(s.endTime)||!s.endTime;if("TrafficAnnouncement"===t.properties.type){var d=Object(u.h)(null,r.config);l=l&&s.modesOfTransport.includes("WALK"===d?"PEDESTRIAN":d)}l&&r.drawItem(e,t,s)}}return r};n&&s-n<=3e5?o.a.Store.primeCache({query:i},l):o.a.Store.forceFetch({query:i},l)},this.drawItem=function(e,t,a){var i="TrafficAnnouncement"===t.properties.type?r.config.trafficAnnouncements:r.config.disorders,n=t.toGeoJSON(r.tile.coords.x,r.tile.coords.y,r.tile.coords.z),o=Object(s.a)(n,"geometry.type"),l=Object(s.a)(t,"properties.detour",!1),d=Object(s.a)(i,"colors."+a.severity);if("TrafficAnnouncement"===t.properties.type&&(d=function(e,t){var a=Object(s.a)(e,"class[0].class");return a?Object(s.a)(t,"colors.CATEGORY["+a+"]",t.colors.CATEGORY.DEFAULT):t.colors.CATEGORY.DEFAULT}(a,i)),m()().isBefore(a.startTime)&&i.showUpcoming){if(d=Object(s.a)(i,"colors.UPCOMING")||d,l&&!i.showUpcomingDetour)return}else if(l){if(!i.showDetours)return;d=Object(s.a)(i,"colors.DETOUR")||d}var c=Object(s.a)(i,"colors.GEOM_OVERRIDE",d);e.forEach((function(e){r.drawGeom(t,e,o,i,d,c)}))},this.drawGeom=function(e,t,a,i,n,o){if("LineString"===a)i.showLines&&(Object(p.h)(r.tile,t,o),r.features.push({lineString:t,geom:null,properties:e.properties})),i&&i.showLineIcons&&(i.showLines?[t[0],t.slice(-1)[0]]:t).forEach((function(t){t&&t.x>0&&t.y>0&&t.x<e.extent&&t.y<e.extent&&(Object(p.g)(r.tile,t,r.imageSize,n),i.showLines||r.features.push({geom:t,properties:e.properties}))}));else if("Polygon"===a){if(i.showPolygons&&(Object(p.i)(r.tile,t,o),r.features.push({polygon:t,geom:null,properties:e.properties})),i&&i.showPolygonCenterIcon){var c=t.map((function(e){return[e.x,e.y]})),m=Object(s.a)(Object(l.a)(Object(d.i)([c])),"geometry.coordinates",[]);if(m.length){var u={x:m[0],y:m[1]};Object(p.g)(r.tile,u,r.imageSize,n),i.showPolygons||r.features.push({geom:u,properties:e.properties})}}}else"Point"===a&&i.showIcons&&(Object(p.g)(r.tile,t[0],r.imageSize,n),r.features.push({geom:t[0],properties:e.properties}))},this.tile=t,this.config=a;var c=f.c&&window.devicePixelRatio||1;this.imageSize=20*c,this.promise=this.getPromise()};h.getName=function(){return"disorders"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/EcoCounters.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return l}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/lodash-es/pick.js"),r=a("./node_modules/pbf/index.js"),o=a("./app/util/mapIconUtils.js"),s=a("./app/util/browser.js"),l=function(){function t(e,t){this.tile=e,this.config=t;var a=s.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.ECO_COUNTERS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new r.a(e));if(t.features=[],null!=a.layers.ecocounters)for(var s=0,l=a.layers.ecocounters.length-1;s<=l;s++){var d=a.layers.ecocounters.feature(s),c=d.loadGeometry()[0];d.geom=c[0],t.features.push(Object(n.a)(d,["geom","properties"])),Object(o.j)(t.tile,d.geom,t.imageSize)}}))},t}();l.getName=function(){return"ecoCounters"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/Fluencies.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return u}));var i=a("./node_modules/@babel/runtime/helpers/esm/extends.js"),n=a("./node_modules/@mapbox/vector-tile/index.js"),r=a("./node_modules/pbf/index.js"),o=a("./node_modules/lodash-es/get.js"),s=a("./node_modules/moment/moment.js"),l=a.n(s),d=a("./app/util/mapIconUtils.js"),c=a("./app/util/browser.js"),m=null,u=function(t,a){var s=this;this.fetchWithAction=function(t){return fetch(""+s.config.URL.FLUENCY_MAP+(s.tile.coords.z+(s.tile.props.zoomOffset||0))+"/"+s.tile.coords.x+"/"+s.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new n.a(new r.a(e));s.features=[];var i=[];if(null!=a.layers.fluency)for(var o=0,l=a.layers.fluency.length-1;o<=l;o++){var d=a.layers.fluency.feature(o);if(!s.tile.props.isHighlight||s.tile.props.highlightedFluency===d.properties.name+"_"+d.properties.detName||s.tile.props.highlightedFluency===d.properties.name+"_"+d.properties.trafficDirection){var c=d.loadGeometry();i.push({geometryList:c,feature:d})}}i.forEach(t)}))},this.fetchAndDrawStatus=function(e){var t=e.geometryList,a=e.feature;m=(new Date).getTime(),"TRAFFIC_FLOW_UNKNOWN"!==a.properties.trafficFlow&&l()().diff(l()(a.properties.measuredTime||0),"minutes")>15&&(a.properties.trafficFlow="TRAFFIC_FLOW_UNKNOWN");var n=a.properties.trafficFlow;(Object(o.a)(a,"properties.name")||Object(o.a)(s.config,"fluencies.showEmpty"))&&t.forEach((function(e){if(s.config.fluencies&&s.config.fluencies.showLines&&e.length>1){var t="#999999";s.config.fluencies.colors&&(s.config.fluencies.colors[n]?t=s.config.fluencies.colors[n]:s.config.fluencies.colors.DEFAULT&&(t=s.config.fluencies.colors.DEFAULT));var r=s.config.fluencies,o=r.lineWidth,l=r.lineWidthHighlighted;Object(d.l)(s.tile,e,t,s.tile.props.isHighlight?l:o),s.features.push({lineString:e,geom:null,properties:Object(i.a)({name:""},a.properties)})}s.config.fluencies&&s.config.fluencies.showIcons&&[e[0],e.slice(-1)[0]].forEach((function(e){e&&e.x>0&&e.y>0&&e.x<a.extent&&e.y<a.extent&&(Object(d.k)(s.tile,e,s.imageSize),s.config.fluencies.showLines||s.features.push({geom:e,properties:Object(i.a)({name:""},a.properties)}))}))}))},this.onTimeChange=function(){if(s.tile.coords.z>s.config.fluencies.fluenciesMinZoom){var e=(new Date).getTime();m&&e-m>3e4&&s.fetchWithAction(s.fetchAndDrawStatus)}},this.tile=t,this.config=a;var u=c.c&&window.devicePixelRatio||1;this.imageSize=20*u,this.promise=this.fetchWithAction(this.fetchAndDrawStatus)};u.getName=function(){return"fluencies"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/MaintenanceVehicleRoutes.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return p}));var i=a("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),n=a("./node_modules/@mapbox/vector-tile/index.js"),r=a("./node_modules/lodash-es/get.js"),o=a("./node_modules/pbf/index.js"),s=a("./app/util/mapIconUtils.js"),l=a("./app/util/browser.js"),d=a("./app/constants.js"),c=a("./app/util/modeUtils.js"),m=a("./app/util/maintenanceUtils.js"),u=function(t,a,i,u,p){var f=this;this.getPromise=function(){var t=f.streetMode===d.q.Car?f.config.URL.MAINTENANCE_VEHICLE_MOTORISED_MAP:f.config.URL.MAINTENANCE_VEHICLE_NON_MOTORISED_MAP;return fetch(""+t+(f.tile.coords.z+(f.tile.props.zoomOffset||0))+"/"+f.tile.coords.x+"/"+f.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var t=new n.a(new o.a(e));f.features=[];var a=f.streetMode===d.q.Car?"maintenanceroutesmotorised":"maintenanceroutesnonmotorised";if(null!=t.layers[a])for(var i=t.layers[a],r=Object(m.b)({featureArray:i,timeRange:f.timeRange,includeOnlyInspectionJob:f.onlyInspectionJob,includeOnlyBrushingJobs:f.brushingFor30days,includeOnlyContractType:!!f.bicycleRoutesMainContract&&d.g.Oulu}),l=function(){var e=r[c],t=e.properties,a=t.jobId,i=t.vehicleType,n=a;f.onlyInspectionJob&&a===d.p&&(n=a+"-"+("string"==typeof i?i.toLowerCase():"car"));var o=d.h[n]||d.h[0];e.loadGeometry().forEach((function(t){f.config.maintenanceVehicles&&f.config.maintenanceVehicles.showLines&&t.length>1&&(Object(s.o)(f.tile,t,o),f.features.push({lineString:t,geom:null,properties:e.properties}))}))},c=0,u=r.length-1;c<=u;c++)l()}))},this.onlyInspectionJob=!1,this.tile=t,this.config=a,this.timeRange=Object(r.a)(u,"maintenanceVehicles.timeRange"),this.brushingFor30days=Object(r.a)(u,"maintenanceVehicles.brushingFor30days");var g=l.c&&window.devicePixelRatio||1;this.imageSize=20*g,this.streetMode=Object(c.h)(p,a),this.promise=this.getPromise(),this.bicycleRoutesMainContract=Object(r.a)(i,"bicycleRoutesMainContract")};u.getName=function(){return"maintenanceVehicles"};var p=function(e){function t(t,a,i,n,r){var o;return(o=e.call(this,t,a,i,n,r)||this).onlyInspectionJob=!0,o.brushingFor30days=!1,o}return Object(i.a)(t,e),t}(u);p.getName=function(){return"roadInspectionVehicles"},t.b=u}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/ParkingStations.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return m}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/pbf/index.js"),r=a("./node_modules/react-relay/classic.js"),o=a.n(r),s=a("./node_modules/lodash-es/pick.js"),l=a("./app/util/mapIconUtils.js"),d=a("./app/util/browser.js"),c={},m=function(t,a){var r=this;this.fetchWithAction=function(t){return fetch(""+r.config.URL.PARKING_STATIONS_MAP+(r.tile.coords.z+(r.tile.props.zoomOffset||0))+"/"+r.tile.coords.x+"/"+r.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new n.a(e));if(r.features=[],null!=a.layers.carparks)for(var o=0,d=a.layers.carparks.length-1;o<=d;o++){var c=a.layers.carparks.feature(o),m=c.loadGeometry()[0];c.geom=m[0],r.features.push(Object(s.a)(c,["geom","properties"])),Object(l.r)(r.tile,c.geom,r.imageSize)}r.features.forEach(t)}))},this.fetchAndDrawStatus=function(e){var t=e.geom,a=e.properties.id,i=o.a.createQuery({calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{fieldName:"spacesAvailable",kind:"Field",metadata:{},type:"Int"},{fieldName:"maxCapacity",kind:"Field",metadata:{},type:"Int"},{fieldName:"realtime",kind:"Field",metadata:{},type:"Boolean"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"carPark",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"ParkingStations",type:"CarPark"},{id:a}),n=c[a],s=(new Date).getTime(),d=function(e){if(e.done){c[a]=(new Date).getTime();var n=o.a.Store.readQuery(i)[0];if(n&&n.realtime&&r.tile.coords.z>=r.config.parkingStations.smallIconMinZoom){var s=2;n.spacesAvailable>0&&(s=n.spacesAvailable>n.maxCapacity*(r.config.parkingStations.availabilityThreshold||.25)?0:1);var d=["",n.spacesAvailable,"X"][s],m=["green","orange","red"][s];Object(l.b)(r.tile,t,d,r.imageSize,r.availabilityImageSize,r.scaleratio,m)}}return r};n&&s-n<=3e4?o.a.Store.primeCache({query:i},d):o.a.Store.forceFetch({query:i},d)},this.onTimeChange=function(){r.tile.coords.z>r.config.parkingStations.smallIconMinZoom&&r.fetchWithAction(r.fetchAndDrawStatus)},this.tile=t,this.config=a,this.scaleratio=d.c&&window.devicePixelRatio||1,this.imageSize=20*this.scaleratio,this.availabilityImageSize=14*this.scaleratio,this.promise=this.fetchWithAction(this.fetchAndDrawStatus)};m.getName=function(){return"parkingStations"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/RoadConditions.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return c}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/pbf/index.js"),r=a("./node_modules/react-relay/classic.js"),o=a.n(r),s=a("./app/util/mapIconUtils.js"),l=a("./app/util/browser.js"),d={},c=function(t,a){var r=this;this.fetchWithAction=function(t){return fetch(""+r.config.URL.ROAD_CONDITIONS_MAP+(r.tile.coords.z+(r.tile.props.zoomOffset||0))+"/"+r.tile.coords.x+"/"+r.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new n.a(e));r.features=[];var o=[];if(null!=a.layers.roadconditions)for(var s=0,l=a.layers.roadconditions.length-1;s<=l;s++){var d=a.layers.roadconditions.feature(s),c=d.loadGeometry();o.push({geometryList:c,feature:d})}o.forEach(t)}))},this.fetchAndDrawStatus=function(e){var t=e.geometryList,a=e.feature,i=a.properties.id,n=o.a.createQuery({calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"id"}}],children:[{children:[{fieldName:"forecastName",kind:"Field",metadata:{},type:"String"},{fieldName:"type",kind:"Field",metadata:{},type:"String"},{fieldName:"overallRoadCondition",kind:"Field",metadata:{},type:"String"}],fieldName:"roadConditionForecasts",kind:"Field",metadata:{canHaveSubselections:!0,isPlural:!0},type:"RoadConditionForecast"},{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"roadCondition",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"RoadConditions",type:"RoadCondition"},{id:i}),l=d[i],c=(new Date).getTime(),m=function(e){if(e.done){d[i]=(new Date).getTime();var l=o.a.Store.readQuery(n)[0];if(l){var c=l.roadConditionForecasts[0].overallRoadCondition;t.forEach((function(e){if(r.config.roadConditions&&r.config.roadConditions.showLines&&e.length>1){var t="#999999";r.config.roadConditions.colors&&(r.config.roadConditions.colors[c]?t=r.config.roadConditions.colors[c]:r.config.roadConditions.colors.DEFAULT&&(t=r.config.roadConditions.colors.DEFAULT)),Object(s.t)(r.tile,e,t),r.features.push({lineString:e,geom:null,properties:a.properties})}r.config.roadConditions&&r.config.roadConditions.showIcons&&[e[0],e.slice(-1)[0]].forEach((function(e){e&&e.x>0&&e.y>0&&e.x<a.extent&&e.y<a.extent&&(Object(s.s)(r.tile,e,r.imageSize),r.config.roadConditions.showLines||r.features.push({geom:e,properties:a.properties}))}))}))}}return r};l&&c-l<=3e4?o.a.Store.primeCache({query:n},m):o.a.Store.forceFetch({query:n},m)},this.onTimeChange=function(){r.tile.coords.z>r.config.roadConditions.roadConditionsMinZoom&&r.fetchWithAction(r.fetchAndDrawStatus)},this.tile=t,this.config=a;var c=l.c&&window.devicePixelRatio||1;this.imageSize=20*c,this.promise=this.fetchWithAction(this.fetchAndDrawStatus)};c.getName=function(){return"roadConditions"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/RoadSigns.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return l}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/lodash-es/pick.js"),r=a("./node_modules/pbf/index.js"),o=a("./app/util/mapIconUtils.js"),s=a("./app/util/browser.js"),l=function(){function t(e,t){this.tile=e,this.config=t;var a=s.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.ROAD_SIGNS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new r.a(e));if(t.features=[],null!=a.layers.roadsigns)for(var s=0,l=a.layers.roadsigns.length-1;s<=l;s++){var d=a.layers.roadsigns.feature(s),c=d.loadGeometry()[0];if(d.geom=c[0],t.features.push(Object(n.a)(d,["geom","properties"])),"SPEEDLIMIT"===d.properties.type){var m=d.properties.displayValue;m&&"null"!==m&&Object(o.x)(t.tile,d.geom,t.imageSize,m)}if("INFORMATION"===d.properties.type&&Object(o.n)(t.tile,d.geom,t.imageSize,d.properties.severity),"WARNING"===d.properties.type){var u=d.properties.displayValue;u&&"null"!==u&&Object(o.A)(t.tile,d.geom,t.imageSize,u)}}}))},t}();l.getName=function(){return"roadSigns"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/Roadworks.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return s}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/pbf/index.js"),r=a("./app/util/mapIconUtils.js"),o=a("./app/util/browser.js"),s=function(){function t(e,t){this.tile=e,this.config=t;var a=o.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.ROADWORKS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new n.a(e));if(t.features=[],null!=a.layers.roadworks)for(var o=function(){var e=a.layers.roadworks.feature(s);e.loadGeometry().forEach((function(a){t.config.roadworks&&t.config.roadworks.showLines&&a.length>1&&(Object(r.v)(t.tile,a),t.features.push({lineString:a,geom:null,properties:e.properties})),t.config.roadworks&&t.config.roadworks.showIcons&&a.forEach((function(a){a&&a.x>0&&a.y>0&&a.x<e.extent&&a.y<e.extent&&(Object(r.u)(t.tile,a,t.imageSize),t.config.roadworks.showLines||t.features.push({geom:a,properties:e.properties}))}))}))},s=0,l=a.layers.roadworks.length-1;s<=l;s++)o()}))},t}();s.getName=function(){return"roadworks"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/TmsStations.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return l}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/lodash-es/pick.js"),r=a("./node_modules/pbf/index.js"),o=a("./app/util/mapIconUtils.js"),s=a("./app/util/browser.js"),l=function(){function t(e,t){this.tile=e,this.config=t;var a=s.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.TMS_STATIONS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new r.a(e));if(t.features=[],null!=a.layers.tmsstations)for(var s=0,l=a.layers.tmsstations.length-1;s<=l;s++){var d=a.layers.tmsstations.feature(s),c=d.loadGeometry()[0];d.geom=c[0],t.features.push(Object(n.a)(d,["geom","properties"])),Object(o.z)(t.tile,d.geom,t.imageSize)}}))},t}();l.getName=function(){return"tmsStations"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/component/map/tile-layer/WeatherStations.js":function(e,t,a){"use strict";(function(e){a.d(t,"a",(function(){return l}));var i=a("./node_modules/@mapbox/vector-tile/index.js"),n=a("./node_modules/lodash-es/pick.js"),r=a("./node_modules/pbf/index.js"),o=a("./app/util/mapIconUtils.js"),s=a("./app/util/browser.js"),l=function(){function t(e,t){this.tile=e,this.config=t;var a=s.c&&window.devicePixelRatio||1;this.imageSize=20*a,this.promise=this.getPromise()}return t.prototype.getPromise=function(){var t=this;return fetch(""+this.config.URL.WEATHER_STATIONS_MAP+(this.tile.coords.z+(this.tile.props.zoomOffset||0))+"/"+this.tile.coords.x+"/"+this.tile.coords.y+".pbf").then((function(t){if(200===t.status)return t.headers.has("x-protobuf-encoding")&&"base64"===t.headers.get("x-protobuf-encoding")?t.text().then((function(t){return e.from(t,"base64")})):t.arrayBuffer()}),(function(e){return console.log(e)})).then((function(e){var a=new i.a(new r.a(e));if(t.features=[],null!=a.layers.weatherstations)for(var s=0,l=a.layers.weatherstations.length-1;s<=l;s++){var d=a.layers.weatherstations.feature(s),c=d.loadGeometry()[0];d.geom=c[0],t.features.push(Object(n.a)(d,["geom","properties"])),Object(o.B)(t.tile,d.geom,t.imageSize)}}))},t}();l.getName=function(){return"weatherStations"}}).call(this,a("./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer)},"./app/route/CityBikeRoute.js":function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));var i=a("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),n=a("./node_modules/react-relay/classic.js"),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t}(a.n(n).a.Route);r.queries={station:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"stationId"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"bikeRentalStation",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"CityBikeRoute",type:"BikeRentalStation"}}},r.paramDefinitions={stationId:{required:!0}},r.routeName="CityBikeRoute"},"./app/route/StopRoute.js":function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));var i=a("./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"),n=a("./node_modules/react-relay/classic.js"),r=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t}(a.n(n).a.Route);r.queries={stop:function(){return{calls:[{kind:"Call",metadata:{type:"String!"},name:"id",value:{kind:"CallVariable",callVariableName:"stopId"}}],children:[{fieldName:"id",kind:"Field",metadata:{isGenerated:!0,isRequisite:!0},type:"ID"}],fieldName:"stop",kind:"Query",metadata:{identifyingArgName:"id",identifyingArgType:"String!"},name:"StopRoute",type:"Stop"}}},r.paramDefinitions={stopId:{required:!0}},r.routeName="StopRoute"}}]);
//# sourceMappingURL=6008e0e1b5a3fdab4b30.js.map